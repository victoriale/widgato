{"version":3,"sources":["webpack:///main.min.js","webpack:///webpack/bootstrap cdc3379429ee3a60a0aa","webpack:///./js/main.js","webpack:///./html/index.html","webpack:///./css/slider.css","webpack:///./node_modules/css-loader/lib/css-base.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","getIgloo","windowFrame","window","iglooTries","totalTries","igloo","creativeUnitSetup","parent","console","warn","e","firstWidgetRun","document","readyState","onreadystatechange","friendlyIF","createNewIframe","htmlFile","iframeStyleObject","setUpNewIframe","checkEmbeds","startTriviaAnalytics","slider","iframe","createElement","obj","style","currentScript","parentNode","insertBefore","contentWindow","open","write","close","friendlyIFdocument","getIframeQuery","setIframeStyle","query","setupEnvironment","srcQuery","split","JSON","parse","decodeURIComponent","replace","log","location","search","substr","wide","getAttribute","width","maxWidth","height","addEventListener","clientWidth","appendChild","createTextNode","cssFile","head","$","getElementById","widgetQuery","env","cat","category","group","dom","environment","getDomain","getEnv","apiCallUrl","dwApi","subCategory","waldo","protocolToUse","wheresWaldo","getLocation","state","toLowerCase","postUrl","fallBackApi","imageUrl","xmlHttp","XMLHttpRequest","status","responseText","send","element","widgetContainers","getElementsByClassName","IfClassName","total_embeds","length","id","contentAnalyzed","resetAnalytics","userAgentObj","iglooAnalytics","view","analyticsSession","analyticsWindowFocus","analyticsDwellEngagement","analyticsViewScroll","contentElement","type","percent","utils","elementIsVisible","browser","timer","tick","stopAt","debug_element","createFunction","this","time","timerOn","intervalTimer","startTime","cTimer","setInterval","pauseTime","debug","innerHTML","clearInterval","resetTime","createPayloadFrame","jsonObject","payloadIframeWindow","payloadIframe","payloadId","rand_id","setAttribute","className","scrolling","overflow","src","border","reporting","remove","outerHTML","updatePayload","payloadFail","storeSession","storeSessionFn","set","oneSecMRCcheck","embed_view","ct","content_title","bo","bounce","cl","total_clicks","eb","ed","engageDwell","ev","li","lv","viewDwell","mo","mobile","pa","event","pl","z","si","sessionId","vd","isMobile","onchange","evt","hidden","isActive","Date","now","session_id","sessionStorage","setItem","stringify","timeToLive","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","undefined","set_idle_listeners","top","start_timer","debugSession","widgetEngaged","sessionTimer","removeItem","removeEventListener","dwellLimitTimer","sstorage","randomString","payloadTimer","payloadTempTimer","debugView","debugTimer","viewEngaged","question_view","oneSecMRC","isActiveTimer","scrollTo","scrollX","scrollY","dwellTime","debugLimit","onmouseover","skipped","len","an","str","min","max","r","Math","random","String","fromCharCode","url","hostName","getHostName","domain","parts","reverse","indexOf","match","sendPostMessageToIgloo","postObject","maxLoops","postWindows","currentWindow","currentLoop","push","postMessage","widgetData","protocol","tries","maxTries","floor","listRand","currentIndex","maxIndex","svgIcon","scripts","getElementsByTagName","overflow-x","overflow-y","getPublisher","pub","pubs","mlb","hex","fallbackImage","nfl","ncaaf","nba","college_basketball","finance","weather","crime","demographics","politics","disaster","celebrities","music","loadData","apiUrl","loadMore","newCount","sliderWindow","xhttp","ActiveXObject","dataArray","l_data","data","listData","currentPub","listCount","populateslider","msg","statusText","message","sliderDocument","display","setTimeout","displayAd","sliderContainer","sliderAdZone","widgetLoaded","widgetZone","opacity","zIndex","adProgressCounter","adIntervalTimer","progressBar","adIntervalMilliSeconds","setCursorIcon","iconUrl","sliderDomain","cursor","title","backStyle","items","outputHTML","listWrapper","l_param","randomNumber","randomImage","li_img","body","html","pointer","l_alt_title","l_title","createTitleTile","image","icon","li_value","li_tag","image_class","player_wide_img","team_wide_img","data_point_2","data_value_2","sliderData","img_class","img_background","value","tag","li_title","sub_txt","li_sub_txt","rank","li_rank","createDataTile","checkListView","createSliderListeners","appendNewList","appendCount","lazyLoaded","titleData","sliderBlock","tileOutput","error","tileData","scrollStart","changedTouches","startCord","x","pageX","getTime","scrollMove","preventDefault","scrollEnd","sliderScroll","scrollIncrements","endCord","elapsedTime","minTime","direction","abs","minDistanceX","scrollCounter","initialTile","appendedTile","scrollLeft","right","adCounter","pointerAnimation","scrollRight","currentListId","action","snt_data","initialLoad","initialAdRun","sliderBlocks","addListeners","el","userEv","fn","events","animate","classList","add","targetEl","l_wrappers","iWidth","offsetWidth","wLeft","getBoundingClientRect","left","wWidth","listPadding","elementChecked","parentElement","getItem","before_time","after_time","jsonData","join","cssWithMappingToString","item","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","concat","sources","map","source","sourceRoot","sourceMap","unescape","encodeURIComponent","list","toString","mediaQuery","alreadyImportedModules"],"mappings":"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","file":"main.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function () {\r\n    //Global Variables\r\n    var protocolToUse = (location.protocol == \"https:\") ? \"https://\" : \"http://\";\r\n    var $;\r\n    var iglooTries = 0;\r\n    var totalTries = 10;\r\n\r\n    var imageUrl = \"images.synapsys.us\"; // this is global call that is used for images\r\n    var dwApi = \"dw.synapsys.us/list_api.php\"; // dynamic widget api\r\n    var waldo = \"waldo.synapsys.us/getlocation/2\";\r\n    var postUrl = \"-pa.synapsys.us/\";\r\n    var apiCallUrl; // this is global call that is used for api calls\r\n    var fallBackApi; // used for nfl and ncaaf category\r\n    var tries = 0; // flag for api to try at least 10 times before failing completely\r\n    var maxTries = 5;\r\n    var rand_id = Math.floor(Math.random() * 1000);\r\n    var listRand = Math.floor((Math.random() * 100) + 1); // used to increment index of random list in database\r\n    //Creative Unit Data related variables\r\n    var widgetData; // api returns is sent here\r\n    var subCategory; // with a vast amount groups and categories need we need the currently shown category for the rest of the code\r\n    var currentIndex = 0; // current index of an array which (default = 0)\r\n    var maxIndex = 1; //declare max index of returned data (default = 1)\r\n    var getLocation; // in case location data is needed\r\n    var svgIcon = \"<svg version='1.1' x='0px' y='0px' width='26' height='39' viewBox='0 0 26 39' opacity='1' \" +\r\n        \"xml:space='preserve'><g  fill='#FFF' fill-rule='evenodd'><path d='M10.677 8c-1.773 0-3.226 1.47-3.226 3.263v11.23c-.499-1.091-1.395-2.272-2.52-2.562-1.53-.42-3.403.817-3.83 2.256-.218.801-.076 1.714.353 2.83 2.094 5.095 4.674 9.988 7.812 13.703.15.175.376.278.605.28h10.887a.804.804 0 0 0 .478-.166c1.161-.87 2.097-2.351 2.873-4.117a23.622 23.622 0 0 0 1.676-5.812c.306-1.998.304-3.87-.126-5.532-.414-1.603-1.532-2.938-3.2-3.136a5.235 5.235 0 0 0-1.16.115c-.206-.5-.496-.928-.857-1.186a2.85 2.85 0 0 0-1.713-.56c-.477.007-.912.183-1.298.458-.173-.267-.351-.546-.58-.713a2.904 2.904 0 0 0-1.739-.561c-.417 0-.822.118-1.21.28v-6.807C13.869 9.08 12.168 7.995 10.678 8zm0 1.632c.907 0 1.613.713 1.613 1.631v8.566c-.005.37.27.725.625.808a.83.83 0 0 0 .912-.451c.178-.375.85-.765 1.286-.765.195 0 .559.083.793.255.235.172.416.374.416.969 0 .363.27.707.62.792a.827.827 0 0 0 .905-.423c.327-.662.504-.77.907-.777.112-.002.503.073.756.255.254.181.441.39.441.969a.835.835 0 0 0 .485.755.818.818 0 0 0 .876-.156c.306-.153.606-.2.995-.192.961.125 1.46.733 1.802 1.95.345 1.23.358 2.985.076 4.832s-.838 3.787-1.55 5.404c-.668 1.517-1.484 2.703-2.205 3.315H10.26c-2.83-3.378-5.533-8.566-7.296-12.938-.367-.955-.4-1.505-.315-1.81.3-.79 1.136-1.235 1.853-1.122.857.326 1.07.905 1.436 1.568l1.6 3.25a.828.828 0 0 0 .906.422.84.84 0 0 0 .62-.792V11.263c0-.917.705-1.631 1.612-1.631z'/>\" +\r\n        \"<path d='M4.442 0a.803.803 0 0 0-.58.243L.227 3.923c-.177.165-.22.37-.227.576.006.224.06.403.227.575l3.635 3.681c.296.33.844.318 1.148.013.305-.305.308-.861 0-1.163L2.751 5.317H18.25l-2.26 2.288c-.307.302-.304.858 0 1.163.305.305.854.302 1.15-.013l3.634-3.68c.167-.173.22-.352.227-.576-.008-.206-.05-.41-.227-.575L17.138.243c-.301-.324-.844-.318-1.148-.013-.305.305-.308.861 0 1.163l2.259 2.288H2.75l2.26-2.288c.307-.302.304-.858 0-1.163A.788.788 0 0 0 4.441 0z'/></g></svg> \";\r\n\r\n    //Embed Related variables\r\n    var embedURL = \"slider/min\";\r\n    var currentScript = document.currentScript != null && document.currentScript.src.indexOf(embedURL) != -1 ? document.currentScript : (function () {\r\n        //grab the current script dom element\r\n        // resolution for IE since it does not have currentScript to find the currently running script on the page\r\n        var scripts = document.getElementsByTagName('script');\r\n        for (var i = scripts.length - 1; i >= 0; i--) {\r\n            if (scripts[i].src.indexOf(embedURL) != -1) {\r\n                return scripts[i];\r\n            }\r\n        }\r\n    })();\r\n    var hostname; //host name is obtained by the given url of the script source\r\n    var firstWidgetRun = true; //makes sure the listeners run once\r\n    var windowWidth;\r\n    var query = {}; // QUERY grabbed from database info put into iframe\r\n\r\n\r\n    //Iframe Related variables\r\n    var friendlyIF;\r\n    var IfClassName = 'sliderIframe';\r\n    var iframeStyleObject = { // SET STYLE of IFRAME sent into createNewIframe();\r\n        className: IfClassName,\r\n        width: '300', //default\r\n        height: '250',\r\n        name: currentScript.src,\r\n        style: {\r\n            border: 'none',\r\n            'overflow-x': 'auto',\r\n            'overflow-y': 'hidden'\r\n        }\r\n    };\r\n    var htmlFile = __webpack_require__(1);\r\n    var cssFile = __webpack_require__(2);\r\n\r\n\r\n    //#0\r\n    function getIgloo(windowFrame) {\r\n        try {\r\n            windowFrame = windowFrame ? windowFrame : window;\r\n            if (iglooTries < totalTries) {\r\n                iglooTries++;\r\n                if (windowFrame.igloo) {\r\n                    // log(\"#0 getIgloo\");\r\n                    igloo = windowFrame.igloo;\r\n                    creativeUnitSetup();\r\n                } else {\r\n                    getIgloo(windowFrame.parent);\r\n                }\r\n            } else {\r\n                console.warn('igloo not found after 10 tries');\r\n                creativeUnitSetup();\r\n            }\r\n        } catch (e) {\r\n            console.warn('igloo not found error =>', e);\r\n            creativeUnitSetup();\r\n        }\r\n    }\r\n\r\n    //#1\r\n    function creativeUnitSetup() {\r\n        // log(\"#1 creativeUnitSetup\");\r\n\r\n        //Initial load Waits for the DOMContent to load\r\n        if (firstWidgetRun == true && (document.readyState == \"complete\" || document.readyState == \"interactive\")) { // if page is already loaded'\r\n            firstWidgetRun = false;\r\n            friendlyIF = createNewIframe(htmlFile, iframeStyleObject);\r\n            setUpNewIframe(friendlyIF);\r\n            checkEmbeds(friendlyIF);\r\n            startTriviaAnalytics(friendlyIF);\r\n            slider(friendlyIF);\r\n        } else { // elseonce page has finished loading, so as not to slowdown the page load at all\r\n            document.onreadystatechange = function () {\r\n                if (firstWidgetRun == true && (document.readyState == \"complete\" || document.readyState == \"interactive\")) {\r\n                    firstWidgetRun = false;\r\n                    friendlyIF = createNewIframe(htmlFile, iframeStyleObject);\r\n                    setUpNewIframe(friendlyIF);\r\n                    checkEmbeds(friendlyIF);\r\n                    startTriviaAnalytics(friendlyIF);\r\n                    slider(friendlyIF);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //#2\r\n    function createNewIframe(htmlFile, object) {\r\n        // log('#2 createNewIframe');\r\n        // console.log('iframe insert html');\r\n        // console.log('iframe styles', object);\r\n        //create friendly iframe to place ourselves inside\r\n        var iframe = document.createElement('iframe');\r\n        for (var obj in object) {\r\n            switch (obj) {\r\n            case 'style':\r\n                for (var style in object[obj]) {\r\n                    iframe[obj][style] = object[obj][style];\r\n                }\r\n                break;\r\n            default:\r\n                iframe[obj] = object[obj];\r\n                break;\r\n            }\r\n        }\r\n\r\n        currentScript.parentNode.insertBefore(iframe, currentScript);\r\n\r\n        //create inline html for friendlyIframe\r\n        if (htmlFile) {\r\n            iframe.contentWindow.document.open();\r\n            iframe.contentWindow.document.write(htmlFile);\r\n            iframe.contentWindow.document.close();\r\n        } else {\r\n            console.warn('No Html Available for friendly iframe');\r\n        }\r\n        return iframe;\r\n    }\r\n\r\n    //#3\r\n    function setUpNewIframe(iframe) {\r\n        // log('#3 setUpNewIframe');\r\n        // console.log(iframe);\r\n        var friendlyIFdocument = iframe.contentWindow.document;\r\n        if (friendlyIFdocument.readyState == \"complete\" || friendlyIFdocument.readyState == \"interactive\") { // if page is already loaded'\r\n            getIframeQuery(iframe);\r\n            setIframeStyle(iframe, query);\r\n            //after you get the query you set the environment\r\n            setupEnvironment(query);\r\n        } else { // elseonce page has finished loading, so as not to slowdown the page load at all\r\n            friendlyIFdocument.onreadystatechange = function () {\r\n                if (friendlyIFdocument.readyState == \"complete\" || friendlyIFdocument.readyState == \"interactive\") {\r\n                    getIframeQuery(iframe);\r\n                    setIframeStyle(iframe, query);\r\n                    //after you get the query you set the environment\r\n                    setupEnvironment(query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //#4\r\n    function getIframeQuery(iframe) {\r\n        // log('#4 getIframeQuery');\r\n        try {\r\n            var srcQuery = iframe.name.split(\"js?\")[1];\r\n            //determine if a query string is after the index.html location || if query is after a javascript location\r\n            if (srcQuery != \"\" && srcQuery != null) {\r\n                try {\r\n                    query = JSON.parse(decodeURIComponent(srcQuery).replace(/'/g, '\"'));\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                query = JSON.parse(decodeURIComponent(document.location.search.substr(1)));\r\n            }\r\n        } catch (e) {\r\n            console.log('query error', e);\r\n            query = {};\r\n        }\r\n        // console.log('query', query);\r\n    }\r\n\r\n    //#5\r\n    function setIframeStyle(iframe, query) {\r\n        // log('#5 setIframeStyle');\r\n        // console.log('setIframeStyle =>', iframe);\r\n        var friendlyIFdocument = iframe.contentWindow.document;\r\n\r\n        //create inline style for friendlyIframe\r\n        var style = friendlyIFdocument.createElement(\"style\");\r\n        if (query.wide != null && query.wide != '') {\r\n\r\n            //to see if the parent node is an igloo div that was created by igloo\r\n            if (iframe.parentNode.getAttribute('igloo_id')) {\r\n                iframe.parentNode.style.width = \"100%\"; // CHANGE PARENT DIV which is igloo div to have 100% width\r\n                iframe.parentNode.style.maxWidth = \"992px\"; // By Design max width will be 992px\r\n            }\r\n\r\n            //set iframe width to be 100% width to be responsive\r\n            iframe.width = \"100%\";\r\n            iframe.height = \"250\";\r\n\r\n            //CREATE LISTENER FOR RESIZE\r\n            window.addEventListener('resize', function () {\r\n                //set iframe to width of parent node\r\n                iframe.width = iframe.parentNode.clientWidth;\r\n            }, true);\r\n\r\n            style.appendChild(friendlyIFdocument.createTextNode(cssFile));\r\n        } else {\r\n            style.appendChild(friendlyIFdocument.createTextNode(cssFile));\r\n        }\r\n\r\n        //append the css file into iframe head\r\n        friendlyIFdocument.head.appendChild(style);\r\n\r\n        //create variable to be used similar to jquery for id's\r\n        $ = function (e) { // create a simple version for grabbing id's of elements\r\n            return friendlyIFdocument.getElementById(e)\r\n        };\r\n\r\n    }\r\n\r\n    //#6\r\n    function setupEnvironment(widgetQuery) { //runs once per embed\r\n        // log('#6 setupEnvironment');\r\n        query = widgetQuery;\r\n        var cat = widgetQuery.category;\r\n        var group = widgetQuery.group == '' ? widgetQuery.group = null : widgetQuery.group;\r\n        var dom = widgetQuery.dom == '' ? widgetQuery.dom = null : widgetQuery.dom;\r\n        var environment = getDomain(friendlyIF.name.split('.')[0]);\r\n        var env;\r\n\r\n        if (widgetQuery.env != null) {\r\n            env = widgetQuery.env && widgetQuery != 'prod-' ? widgetQuery.env : 'prod-';\r\n        } else {\r\n            env = getEnv(environment);\r\n        }\r\n\r\n        //setup Image Environment api\r\n        apiCallUrl = dwApi;\r\n        //if group does exist here then add group query parameter otherwise add categeory parameter for api\r\n        if (widgetQuery.group != null && widgetQuery.group != \"\") {\r\n            apiCallUrl += \"?group=\" + group;\r\n        } else {\r\n            subCategory = widgetQuery.category;\r\n            apiCallUrl += \"?cat=\" + cat;\r\n        }\r\n        if (widgetQuery.group == 'weather' || widgetQuery.category == 'weather') {\r\n            waldo = protocolToUse + env + waldo;\r\n            wheresWaldo();\r\n            apiCallUrl += '&location=' + getLocation[0].state.toLowerCase() + '&loc_type=state';\r\n        }\r\n        if (dom != null && dom != \"\" && (widgetQuery.group != 'weather' && widgetQuery.category != 'weather')) {\r\n            apiCallUrl += \"&partner=\" + dom;\r\n        }\r\n        //FALL BACK API SET HERE INCASE Dynamic widget api fails to make a call\r\n        apiCallUrl = protocolToUse + env + apiCallUrl;\r\n        postUrl = protocolToUse + env + postUrl;\r\n        fallBackApi = protocolToUse + env + dwApi + \"?group=sports\";\r\n        imageUrl = protocolToUse + env + imageUrl; // this is global call that is used for images\r\n        // console.log(apiCallUrl);\r\n        // console.log(postUrl);\r\n        // console.log(fallBackApi);\r\n        // console.log(imageUrl);\r\n        // console.log('waldo', getLocation);\r\n    }\r\n\r\n    //#6-1\r\n    function wheresWaldo() {\r\n        // log('#6-1 Where's Waldo?');\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.onreadystatechange = function () {\r\n\r\n            if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\r\n                //On complete function\r\n                getLocation = JSON.parse(xmlHttp.responseText);\r\n            }\r\n        }\r\n        xmlHttp.open(\"GET\", waldo, false); // false for synchronous request\r\n        xmlHttp.send(null);\r\n    }\r\n\r\n    //#7\r\n    function checkEmbeds(element) {\r\n        // log('#7 checkEmbeds');\r\n        var widgetContainers = window.document.getElementsByClassName(IfClassName);\r\n        if (widgetContainers) {\r\n            total_embeds = widgetContainers.length;\r\n            element.id = !element.id && element.id != '' ? element.id : 'slider_id_' + total_embeds;\r\n        } else {\r\n            console.warn('No widget containers found');\r\n        }\r\n        // console.log('total_embeds', total_embeds);\r\n        // console.log('element.id', element.id);\r\n    }\r\n\r\n    //#8\r\n    slider = function (element) {\r\n        // log('#8 slider');\r\n        //inject HTML and CSS structure\r\n        var html =\r\n            \"<div class='wrapper'><div class='pointer' id='pointer_\" + total_embeds + \"'><div class='icon swipe_right'>\" + svgIcon +\r\n            \"</div></div><div class='slider' id='slider_\" + total_embeds + \"'></div>\" +\r\n            \"<div class='slider_ad_zone fade_in_out'><div class='slider_background'><div class='ad_progress_fill'>\" +\r\n            \"</div><div class='ad_progress_bar'></div></div></div></div>\";\r\n\r\n        // var apiCallUrl = protocolToUse + query.env.replace(\"prod-\", \"\") + 'dw.synapsys.us/list_api.php';\r\n        // console.log(element);\r\n        var sliderWindow = element.contentWindow;\r\n        var sliderDocument = element.contentWindow.document;\r\n        // console.log(sliderDocument);\r\n        var pointer; //When content is defined set the swipe indicator\r\n        var slider; //When content is defined set this variable to Container for where sliding blocks are inputed into\r\n\r\n        var sliderBlocks = sliderDocument.getElementsByClassName('slider_block'); // an array of all the blocks in our slider\r\n        var scrollIncrements = 0; // how much to increase the scroll by in this interpolation loop?\r\n        var rand; // list random ID\r\n        // var firstAd; // the div for the actual igloo stack to live in, that gets moved around as you scroll\r\n        var currentPub; // the current color scheme and fallback imageset to use\r\n        var lazyLoaded = false; // are the images after the first one loaded in yet?\r\n        var currentListId = \"\"; // an ID to send to yeti for the current list\r\n        var widgetZone = element.parentElement.getElementsByClassName(\"widget_zone\")[0];\r\n        var widgetLoaded = false;\r\n        var listCount = 0; //keeps count of number of items in a list and aggregates as more lists are loaded\r\n        //Variables for slider functionality\r\n        var startCord = {'x': -1}, //X Coordinate on touchstart or mousedown\r\n            endCord = {'x': -1}, //X Coordinate on touchend or mouseup\r\n            direction = '', //Swiped Direction\r\n            minDistanceX = 10, //Min distance on X axis\r\n            minTime = 100, //Max allowed time between swipe start and end\r\n            startTime = 0, //Time on swiped start\r\n            elapsedTime = 0, //Elapsed time between swiped start and end\r\n            targetEl = sliderDocument.getElementsByClassName('slider'), //Target element\r\n            scrollCounter = 0, //Incremental counter to keep track of list position\r\n            initialLoad = true, //Determines initial load so that new event listeners are not added\r\n            scrollRight = false, //Scroll direction\r\n            scrollLeft = false, //Scroll direction\r\n            initialTile = 220, //Initial tile width to scroll\r\n            appendedTile = 246, //Tile width to scroll plus padding\r\n            adCounter = 0, //Counter for displaying ad\r\n            initialAdRun = false; //flag so that ad will not repeat once initialized\r\n        widgetZone.style.display = 'none';\r\n\r\n        element.classList.add(\"slider_\" + query.category);\r\n\r\n        function getPublisher(pub) {\r\n            // console.log('getPublisher', pub);\r\n            var pubs = {\r\n                mlb: {\r\n                    hex: \"#bc2027\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/baseball_stock.jpg\"\r\n                },\r\n                nfl: {\r\n                    hex: \"#004e87\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/07/football_stock_01_970x250.jpg\"\r\n                },\r\n                ncaaf: {\r\n                    hex: \"#004e87\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/07/football_stock_01_970x250.jpg\"\r\n                },\r\n                nba: {\r\n                    hex: \"#f26f26\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/basketball_stock.jpg\"\r\n                },\r\n                college_basketball: {\r\n                    hex: \"#f26f26\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/basketball_stock.jpg\"\r\n                },\r\n                finance: {\r\n                    hex: \"#3098ff\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/finance_stock.jpg\"\r\n                },\r\n                weather: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/weather_stock.jpg\"\r\n                },\r\n                crime: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/real_estate_stock.jpg\"\r\n                },\r\n                demographics: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/real_estate_stock.jpg\"\r\n                },\r\n                politics: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/real_estate_stock.jpg\"\r\n                },\r\n                disaster: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/real_estate_stock.jpg\"\r\n                },\r\n                celebrities: {\r\n                    hex: \"#6459d3\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/04/actor.jpg\"\r\n                },\r\n                music: {\r\n                    hex: \"#6459d3\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/04/musician.jpg\"\r\n                }\r\n            };\r\n            if (pub == null || pub == \"\" || !pubs[pub]) {\r\n                return pubs[\"finance\"];\r\n            } else {\r\n                return pubs[pub];\r\n            }\r\n        }\r\n\r\n        /***************************** runAPI ***************************\r\n         * @function runAPI\r\n         * function that makes an asynchronous request using http and setting a global variable equal to the response of the text.\r\n         * fail safe of retrying 10 times before sending error message\r\n         *\r\n         * @param function apiUrl -\r\n         */\r\n        //#9\r\n        function loadData(apiUrl, loadMore, newCount) { //Make it to where it is easy to be reused by anyone\r\n            if (typeof loadMore == 'undefined') {\r\n                loadMore = false;\r\n            }\r\n            if (typeof newCount == 'undefined') {\r\n                newCount = 0;\r\n            }\r\n            // log('#9 loadData');\r\n            //variable that stores the response of an http request\r\n            if (sliderWindow.XMLHttpRequest) {\r\n                var xhttp = new XMLHttpRequest();\r\n            } else {\r\n                var xhttp = new ActiveXObject('Microsoft.XMLHTTP')\r\n            }\r\n            xhttp.onreadystatechange = function () {\r\n                // Check if the loading status of the current document is done\r\n                if (this.readyState == 4) {\r\n                    if (this.status == 200) {\r\n                        // On success parse out the response\r\n                        widgetData = JSON.parse(this.responseText);\r\n                        // console.log(widgetData);\r\n                        var dataArray = widgetData.l_data != null ? widgetData.l_data : widgetData.data.listData;\r\n                        //set maximum index of returned dataLayer\r\n                        if (dataArray.length >= 25) {\r\n                            currentIndex = 24;\r\n                            maxIndex = 25;\r\n                        } else {\r\n                            currentIndex = dataArray.length - 1;\r\n                            maxIndex = dataArray.length;\r\n                        }\r\n                        currentPub = getPublisher(widgetData.category);\r\n                        //aggregates the number of items in a list\r\n                        listCount = newCount + dataArray.length;\r\n                        //Once Data from Api returns then populate slider\r\n                        populateslider(widgetData, loadMore);\r\n                    } else {\r\n                        // Error handling\r\n                        // Get the message\r\n                        var msg = this.statusText;\r\n                        if (this.status == 500) {\r\n                            try {\r\n                                msg = JSON.parse(this.responseText).message\r\n                            } catch (e) {\r\n                                console.log('No JSON message')\r\n                            }\r\n                        }\r\n                        msg = 'HTTP Error (' + this.status + '): ' + msg;\r\n                        if (tries > (maxTries - 2)) {\r\n                            console.warn(msg + \" | hiding widget container | => SWAPPING TO FALLBACK\");\r\n                            apiUrl = fallBackApi + \"&rand=1\";\r\n                            apiCallUrl = fallBackApi;\r\n                        }\r\n                        if (tries++ > maxTries) { // IF WIDGET FAILS THEN HIDE THE ENTIRE CONTAINER\r\n                            sliderDocument.getElementsByClassName('e_container')[0].style.display = 'none';\r\n                            throw msg + \" | hiding widget fallback failed container | => PLEASE CONTACT YOUR PROVIDER\";\r\n                        }\r\n                        setTimeout(loadData(apiUrl), 500)\r\n                    }\r\n                }\r\n            };\r\n            xhttp.open(\"GET\", apiUrl, true);\r\n            xhttp.send();\r\n        }\r\n\r\n        /************************** runAPI END ************************/\r\n\r\n        function displayAd() {\r\n            var sliderContainer = sliderDocument.getElementsByClassName('slider_background')[0];\r\n            var sliderAdZone = sliderDocument.getElementsByClassName('slider_ad_zone fade_in_out')[0];\r\n            if (!widgetLoaded) {\r\n                sliderContainer.appendChild(widgetZone);\r\n                widgetLoaded = true;\r\n            }\r\n            widgetZone.style.display = 'block';\r\n            widgetZone.style.opacity = 1;\r\n            widgetZone.style.zIndex = 50;\r\n            sliderAdZone.style.display = 'block';\r\n            var adProgressCounter = 1,\r\n                adIntervalSeconds = 10,\r\n                adIntervalMilliSeconds = 1000;\r\n            var adIntervalTimer = setInterval(function () {\r\n                adProgressCounter++;\r\n                var progressBar = sliderDocument.getElementsByClassName('ad_progress_bar')[0];\r\n                progressBar.style.width = (adProgressCounter * 3.334) + '%';\r\n                if (adProgressCounter >= 31) {\r\n                    adProgressCounter = 1;\r\n                    progressBar.style.width = 0;\r\n                    clearInterval(adIntervalTimer);\r\n                    sliderAdZone.style.display = 'none';\r\n                }\r\n            }, adIntervalMilliSeconds / adIntervalSeconds);\r\n        }\r\n\r\n        function setCursorIcon() {\r\n            var iconUrl;\r\n            var sliderDomain = getDomain(friendlyIF.name);\r\n            // For local use only\r\n            // iconUrl = protocolToUse + sliderDomain + \"/slider/cursors/swipe-icon.svg\";\r\n            iconUrl = protocolToUse + getEnv(sliderDomain.split('.')[0]) + \"w1.\" + sliderDomain + \"/widgets/slider/cursors/swipe-icon.svg\";\r\n            sliderDocument.getElementsByClassName('wrapper')[0].style.cursor = \"url('\" + iconUrl + \"'), move\";\r\n        }\r\n\r\n        //#10\r\n        function populateslider(data, loadMore) {\r\n            // log('#10 populateslider');\r\n            // console.log('populateslider', data);\r\n            var items = data.l_data;\r\n            var title;\r\n            var backStyle;\r\n            var outputHTML = \"\";\r\n            var listWrapper = sliderDocument.createElement('div');\r\n            listWrapper.className = 'list_wrapper';\r\n            listWrapper.setAttribute('list-param', data.l_param);\r\n            listWrapper.setAttribute('category', data.category);\r\n\r\n            //grab a random number for title tile\r\n            var randomNumber = Math.floor(Math.random() * (items.length - 1));\r\n            var randomImage = items[randomNumber].li_img;\r\n\r\n            // CREATE WRAPPER of slider inside of iframe && set global variables. This only needs to run on initial load\r\n            if (!loadMore) {\r\n                sliderDocument.body.innerHTML = html;\r\n                slider = sliderDocument.getElementById('slider_' + total_embeds);\r\n                pointer = sliderDocument.getElementById('pointer_' + total_embeds);\r\n            }\r\n\r\n            //TODO create IMAGE check function\r\n            if (randomImage == null ||\r\n                randomImage == \"\" ||\r\n                randomImage.indexOf(\"no_\") != -1 ||\r\n                randomImage.indexOf(\"no-\") != -1 ||\r\n                randomImage.indexOf('fallback') != -1\r\n            ) {\r\n                randomImage = protocolToUse + currentPub.fallbackImage;\r\n            }\r\n\r\n            items = items.reverse();\r\n            title = data.l_alt_title != null && data.l_alt_title != '' ? data.l_alt_title : data.l_title; // used due to the fact slider is not wide enought to have more than 50 characters for title\r\n\r\n            var titleTile = {\r\n                hex: currentPub.hex,\r\n                image: randomImage,\r\n                title: title,\r\n                icon: svgIcon\r\n            };\r\n            outputHTML = createTitleTile(titleTile);\r\n\r\n            for (var i = 0; i < items.length && i < items.length; i++) {\r\n                if (items[i].li_value) {\r\n                    items[i].li_value = items[i].li_value.replace(items[i].li_tag, \"\");\r\n                }\r\n                var style = \"\";\r\n                var image_class = \"\";\r\n                var image = items[i].li_img.replace(\"'\", \"\");\r\n                //image check\r\n\r\n                if (items[i].player_wide_img != null && items[i].player_wide_img != \"\") {\r\n                  image = imageUrl + items[i].player_wide_img;\r\n                } else if ((items[i].player_wide_img == null || items[i].player_wide_img == \"\") && (items[i].team_wide_img != null && items[i].team_wide_img != \"\")) {\r\n                  image = imageUrl + items[i].team_wide_img;\r\n                } else {\r\n                  image = items[i].li_img;\r\n                }\r\n\r\n                if (data.category == \"weather\" || image == null || image == \"\" || image.indexOf(\"no_\") != -1 || image.indexOf(\"no-\") != -1 || image.indexOf(\"fallback\") != -1 || image === \"//images.synapsys.us\") {\r\n                    style = \"width: auto; height:100%; top: 0; left: 50%; transform: translateY(0); transform: translateX(-50%);\";\r\n                    image_class = \"fallback\";\r\n                    if (data.category != \"music\") {\r\n                        image = protocolToUse + currentPub.fallbackImage;\r\n                    }\r\n                }\r\n                // background style\r\n                if (data.category == \"finance\") {\r\n                    backStyle = \"style='background-image:url('\" + image + \"?width=200\" + \"')\";\r\n                } else {\r\n                    backStyle = \"style='background-color: \"+currentPub.hex+\";'\";\r\n                }\r\n\r\n                if (items[i].data_point_2 == null) {\r\n                    items[i].data_point_2 = \"\";\r\n                }\r\n                if (items[i].data_value_2 == null) {\r\n                    items[i].data_value_2 = \"\";\r\n                }\r\n\r\n                // TODO REWORK BELOW to use category from data instead of embed since we don't have group as a valid category to use\r\n                // if using new api on certain categories then use new format\r\n                var sliderData = {};\r\n                if (data.category == \"celebrities\" || data.category == \"weather\" || data.category == \"music\" || data.category == \"nfl\" || data.category == \"ncaaf\") {\r\n                    if (items[i].data_point_2 == null) {\r\n                        items[i].data_point_2 = \"\";\r\n                    }\r\n                    if (items[i].data_value_2 == null) {\r\n                        items[i].data_value_2 = \"\";\r\n                    }\r\n                    sliderData = {\r\n                        hex: currentPub.hex,\r\n                        style: style,\r\n                        img_class: image_class,\r\n                        img_background: backStyle,\r\n                        image: image,\r\n                        value: items[i].data_value_2,\r\n                        tag: items[i].data_point_2,\r\n                        title: items[i].li_title,\r\n                        sub_txt: items[i].li_sub_txt,\r\n                        rank: items[i].li_rank\r\n                    };\r\n                } else {\r\n                    sliderData = {\r\n                        hex: currentPub.hex,\r\n                        style: style,\r\n                        img_class: image_class,\r\n                        img_background: backStyle,\r\n                        image: image,\r\n                        value: items[i].li_value,\r\n                        tag: items[i].li_tag,\r\n                        title: items[i].li_title,\r\n                        sub_txt: items[i].li_sub_txt,\r\n                        rank: items[i].li_rank\r\n                    };\r\n                }\r\n                if(sliderData.tag === \"\"){\r\n                  outputHTML += createDataTile('type2', sliderData);\r\n                }else{\r\n                  outputHTML += createDataTile('type1', sliderData);\r\n                }\r\n            }\r\n\r\n            //put slider blocks into listWrapper with data attr\r\n            listWrapper.innerHTML += outputHTML;\r\n\r\n            //once list wrapper is created and finished put it inside of slider Div for swipe feature\r\n            slider.innerHTML += listWrapper.outerHTML;\r\n\r\n            //check in-view attribute after list has populated\r\n            checkListView();\r\n            setCursorIcon();\r\n            viewDwell.startTime();\r\n\r\n            createSliderListeners(); // create listeners of content when content has been populated\r\n        } //TODO END OF FUNCTION populateslider make this function into seperate functions that returns what is neccessary for it is modular\r\n\r\n        //Adds new list when the user scrolls far enough\r\n        function appendNewList(appendCount) {\r\n            // log('NEXT LIST', payloadStyles);\r\n            lazyLoaded = false;\r\n            listRand++;\r\n            var sliderApi = apiCallUrl + \"&rand=\"+ listRand;\r\n            loadData(sliderApi, true, appendCount);\r\n        }\r\n\r\n        //#10-1\r\n        function createTitleTile(titleData) {\r\n            // log('#10-1 createTitleTile', payloadStyles);\r\n            var sliderBlock = sliderDocument.createElement('div');\r\n            sliderBlock.className = 'slider_block';\r\n            var titleOutput;\r\n            try {\r\n                tileOutput =\r\n                    \"<div class='title_overlay' >\" +\r\n                    \"<div class='title_image_div overlay' style='background-color: \" + titleData.hex + \"'>\" +\r\n                    \"<img class='title_image' src=\" + titleData.image + \"?width=200\" + \"/>\" +\r\n                    \"</div>\" +\r\n                    \"<div class='title'>\" + titleData.title + \"</div>\" +\r\n                    \"<div class='instructions_container'>\" +\r\n                    \"<div class='instructions_icon'>\" + titleData.icon + \"</div>\" +\r\n                    \"<div class='instructions_text'>Swipe to progress through the list</div>\" +\r\n                    \"</div>\" +\r\n                    \"</div>\";\r\n            } catch (e) {\r\n                titleOutput = \"\";\r\n                console.error(e);\r\n            }\r\n\r\n            sliderBlock.innerHTML = tileOutput;\r\n\r\n            return sliderBlock.outerHTML;\r\n        }\r\n\r\n        //#10-2\r\n        function createDataTile(type, tileData) {\r\n            // log('#10-2 createTileType', payloadStyles);\r\n            var sliderBlock = sliderDocument.createElement('div');\r\n            sliderBlock.className = 'slider_block';\r\n            var tileOutput;\r\n            try {\r\n                switch (type) {\r\n                case 'type1':\r\n                    tileOutput =\r\n                        \"<div class='list_item'>\" +\r\n                        \"<div class='profile_image_div \" + tileData.img_class + \"' \" + tileData.img_background + \">\" +\r\n                        \"<div class='num' style='border-color:\" + tileData.hex + \"'>\" +\r\n                        \"<div class='num_text'>#<b>\" + tileData.rank + \"</b></div>\" +\r\n                        \"</div>\" +\r\n                        \"<img class='profile_image' onmousedown='if (event.preventDefault) event.preventDefault()' src=\" + tileData.image + \"?width=230\" + \" style='\" + tileData.style + \"'>\" +\r\n                        \"</div>\" +\r\n                        \"<div class='info'>\" +\r\n                        \"<div class='info_container'>\" +\r\n                        \"<div class='name'>\" + tileData.title + \"</div>\" +\r\n                        \"<div class='value bold'>\" + tileData.value + \"</div>\" +\r\n                        \"<div class='stat_type'>\" + tileData.tag + \"</div>\" +\r\n                        \"</div>\" +\r\n                        \"</div>\" +\r\n                        \"</div>\";\r\n                    break;\r\n                case 'type2':\r\n                    tileOutput =\r\n                        \"<div class='list_item'>\" +\r\n                        \"<div class='profile_image_div \" + tileData.img_class + \"' \" + tileData.img_background + \">\" +\r\n                        \"<div class='num' style='border-color:\" + tileData.hex + \"'>\" +\r\n                        \"<div class='num_text'>#<b>\" + tileData.rank + \"</b></div>\" +\r\n                        \"</div>\" +\r\n                        \"<img class='profile_image' onmousedown='if (event.preventDefault) event.preventDefault()' src=\" + tileData.image + \"?width=230\" + \" style='\" + tileData.style + \"'>\" +\r\n                        \"</div>\" +\r\n                        \"<div class='info'>\" +\r\n                        \"<div class='info_container'>\" +\r\n                        \"<div class='value'>\" + tileData.title + \"</div>\" +\r\n                        \"<div class='stat_type'>\" + tileData.value + \"</div>\" +\r\n                        \"</div>\" +\r\n                        \"</div>\" +\r\n                        \"</div>\";\r\n                    break;\r\n                default:\r\n                    break;\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n\r\n            sliderBlock.innerHTML = tileOutput;\r\n\r\n            return sliderBlock.outerHTML;\r\n        }\r\n\r\n        //#11\r\n        function createSliderListeners() {\r\n            // log('#11 createSliderListeners');\r\n            //initial event listeners declaration\r\n            function scrollStart(e) {\r\n                e = e ? e : friendlyIF.event; //check element and fallback to friendlyIF event\r\n                e = ('changedTouches' in e) ? e.changedTouches[0] : e; //Check for changedTouches in element (touch events only); if exists use clientX else use mouse element\r\n                startCord = {'x': e.pageX}; // Start Coordinates on x axis on mousedown or touchstart\r\n                startTime = new Date().getTime(); //Set start time\r\n            }\r\n\r\n            function scrollMove(e) {\r\n                e = e ? e : friendlyIF.event; //Check element and fallback to friendlyIF event\r\n                e.preventDefault(); //Cancels any default action on element\r\n            }\r\n\r\n            function scrollEnd(e) {\r\n                var sliderScroll = scrollIncrements;\r\n                e = e ? e : friendlyIF.event; //check element and fallback to friendlyIF event\r\n                e = ('changedTouches' in e) ? e.changedTouches[0] : e; //Check for changedTouches in element (touch events only); if exists use clientX else use mouse element\r\n                endCord = {'x': e.pageX - startCord.x}; //End coordinates on mouseup or touchend\r\n                elapsedTime = new Date().getTime() - startTime; //Get elapsed time\r\n                if (elapsedTime >= minTime) { //Check if user interacted for more than 100ms\r\n                    direction = (endCord.x < 0) ? 'left' : 'right'; //Set direction\r\n                    if (Math.abs(endCord.x) >= minDistanceX) { //Ensure that the user scrolled at lease 10px left or right\r\n                        switch (direction) {\r\n                            case 'left':\r\n                                scrollIncrements = scrollCounter === 0 ? sliderScroll + initialTile : sliderScroll + appendedTile; //advance\r\n                                scrollLeft = true;\r\n                                slider.style.right = scrollIncrements + 'px';\r\n                                scrollCounter++;\r\n                                adCounter++;\r\n                                if (scrollCounter > 0) {\r\n                                    pointerAnimation(false);\r\n                                }\r\n                                break;\r\n                            case 'right':\r\n                                if (scrollCounter !== 0) {\r\n                                    scrollCounter--;\r\n                                    adCounter--;\r\n                                    scrollIncrements = scrollCounter === 0 ? sliderScroll + (-initialTile) : sliderScroll + (-appendedTile); //advance\r\n                                    scrollRight = true;\r\n                                    slider.style.right = scrollIncrements + 'px';\r\n                                    if (scrollCounter === 0) {\r\n                                        pointerAnimation(true)\r\n                                    }\r\n                                    break;\r\n                                }\r\n                        }\r\n                    } else { //fallback to advance tile if the user scroll is less than 10px\r\n                        scrollIncrements = scrollCounter === 0 ? sliderScroll + initialTile : sliderScroll + appendedTile; //advance\r\n                        scrollLeft = true;\r\n                        slider.style.right = scrollIncrements + 'px';\r\n                        scrollCounter++;\r\n                        adCounter++;\r\n                        if (scrollCounter > 0) {\r\n                            pointerAnimation(false);\r\n                        }\r\n                    }\r\n\r\n                    if (query.event) { // if we are in igloo v3 or >\r\n                            // send the list identifiers to yeti analytics\r\n                            query.event.event = \"widget-list\";\r\n                            query.event.l = currentListId;\r\n                            sendPostMessageToIgloo({\r\n                                action: 'snt_tracker',\r\n                                snt_data: query.event\r\n                            }, 10);\r\n                    }\r\n                    //display ad after every third increment of list in one direction\r\n                    if (!initialLoad || adCounter === 4) {\r\n                        if (adCounter === 4 && !initialAdRun) {\r\n                            displayAd();\r\n                            initialAdRun = true;\r\n                        } else if (initialAdRun && (adCounter === 0 || adCounter === 8)) {\r\n                            displayAd();\r\n                            adCounter = 0;\r\n                            initialAdRun = false;\r\n                        } else if (adCounter === -4) { //Needed in the event the adCounter is set to 0 and the user scrolls left\r\n                            displayAd();\r\n                            adCounter = 0;\r\n                            initialAdRun = false;\r\n                        }\r\n                    }\r\n\r\n                    //append new list when scrollCounter is 5 less than list length\r\n                    if (scrollCounter === (sliderBlocks.length - 5)) {\r\n                        appendNewList(scrollCounter);\r\n                    }\r\n                }\r\n            }\r\n\r\n            function addListeners(el, userEv, fn) { //Function to set listeners\r\n                var events = userEv.split(' '); //Split mouse/touch events\r\n                for (var i = 0, length = events.length; i < length; i++) {\r\n                    el.addEventListener(events[i], fn, false);\r\n                }\r\n            }\r\n\r\n            //turns on/off pointer animation on 1st tile\r\n            function pointerAnimation(animate) {\r\n                if (!animate) {\r\n                    pointer.style.opacity = '0';\r\n                    slider.classList.add(\"stopAnim\");\r\n                } else {\r\n                    slider.classList.remove(\"stopAnim\");\r\n                    pointer.style.opacity = '1';\r\n                }\r\n            }\r\n\r\n            //check to see if there are 5 tiles remaining\r\n            if (initialLoad) {\r\n                addListeners(targetEl[0], 'mousedown touchstart', scrollStart);\r\n                addListeners(targetEl[0], 'mousemove touchmove', scrollMove);\r\n                addListeners(targetEl[0], 'mouseup touchend', scrollEnd);\r\n                initialLoad = false;\r\n            }\r\n\r\n        }// END createSliderListeners\r\n\r\n        //TODO make more modular\r\n        function checkListView() {\r\n\r\n              setTimeout(function(){\r\n                var l_wrappers = sliderDocument.getElementsByClassName('list_wrapper');\r\n                var padding = 30;\r\n                var percent = 0.5;\r\n                for (var i = 0; i < l_wrappers.length; i++) {\r\n                  //iframe width on screen\r\n                  var iWidth = element.offsetWidth;\r\n                  //wrapper width on screen\r\n                  var wLeft = l_wrappers[i].getBoundingClientRect().left;\r\n\r\n                  //wrapper width on screen\r\n                  var wWidth = l_wrappers[i].clientWidth;\r\n\r\n                  var listPadding = ((l_wrappers.length - (i-1)) * iWidth);\r\n                  var elementChecked = wWidth-padding+ wLeft;\r\n                  if(percent){\r\n                    if( (elementChecked / iWidth) > percent && (elementChecked - listPadding) < wWidth){\r\n                      l_wrappers[i].setAttribute('in-view', true);\r\n                    }else{\r\n                      l_wrappers[i].setAttribute('in-view', false);\r\n                    }\r\n                  }else{\r\n                    if (elementChecked < 0 || elementChecked > wWidth ) {\r\n                      l_wrappers[i].setAttribute('in-view', false);\r\n                    }else{\r\n                      l_wrappers[i].setAttribute('in-view', true);\r\n                    }\r\n                  }\r\n                }\r\n              }, 700);// about 100ms after the animation ends on slider\r\n        }\r\n\r\n\r\n        //slider function STARTS HERE loadData()\r\n        var sliderApi = apiCallUrl + \"&rand=\"+ listRand;\r\n        loadData(sliderApi);\r\n    };\r\n\r\n    /*\r\n     ****************************************************************************************************************************************\r\n     ***********************ANALYTICS VARIABLES *********************************************************************************************\r\n     ****************************************************************************************************************************************\r\n     */\r\n\r\n    //global variables used for payload\r\n    var storeSessionFn = {\r\n        get: function () {\r\n            if (sessionStorage.getItem('snt_analytics') === null) {\r\n                storeSession = sessionStorage.setItem('snt_analytics', JSON.stringify({\r\n                    before_time: null,\r\n                    after_time: null,\r\n                    session_id: null\r\n                }));\r\n            }\r\n            storeSession = JSON.parse(sessionStorage.getItem('snt_analytics'));\r\n            return storeSession;\r\n\r\n        },\r\n        set: function (jsonData) {\r\n            sessionStorage.setItem('snt_analytics', JSON.stringify(jsonData));\r\n        }\r\n    }; //storeSessionFn\r\n    var widgetEngaged = false;\r\n    var contentAnalyzed;\r\n    var timeToLive = 600000;\r\n    var payloadFail = 0;\r\n    var sessionId,\r\n        partnerId,\r\n        placementId,\r\n        viewEngaged = false;\r\n\r\n    var viewDwell, // view_dwell, Each time a quiz is 50%+ in view for any length of time. (collected every 100ms)\r\n        embedTime, // engage_dwell, When CU is engaged*, each time a question is 50%+ in view for any length of time. (collected every 100ms)\r\n        sessionTimer, // create Session Timer to know when the session has ended and create a new payload;\r\n        payloadTimer, // create Payload Timer to know when to auto send payloads if variables are met;\r\n        engageDwell, // time from the moment the widget is in view and engaged\r\n        dwellLimitTimer,\r\n        isActiveTimer = 0,\r\n        windowActiveTimer; // time limiter for dwell so dwell timer can be stopped after a certain time limit\r\n\r\n    var storeSession;\r\n    var sessionBefore = 0;\r\n    var sessionAfter = 0;\r\n\r\n    var igloo,\r\n        windowActive = true,\r\n        userAgentObj,\r\n        category,\r\n        embed_view = 0, //Each time an embed is 50%+ in view for 1+ seconds. This is recorded only once per embed load.\r\n        content_title = '',\r\n        total_clicks = 0,\r\n        list_view = 0,\r\n        bounce = 0, //should only ever be 1, never more than due to submission on a payload level.  || always return 1 until questions is answered then return 0 which zero means it is no longer in z since it has been answered\r\n        total_embeds; // Record total amount of embeds on a page no matter if in view or not\r\n\r\n    var view = false;\r\n    var oneSecMRC = 0; //MRC standard that content must be atleast 1 sec in view before be considered to be actually viewed\r\n    var oneSecMRCcheck = false;\r\n\r\n\r\n    function startTriviaAnalytics(element) {\r\n        // log('TRIVIA ANALYTICS START', payloadStyles);\r\n        contentAnalyzed = element;\r\n        resetAnalytics();\r\n\r\n        userAgentObj = iglooAnalytics(contentAnalyzed, 'useragent');\r\n\r\n        // if igloo utilities then iglooAnalytics() function will return boolean true if igloo is 50% or more in view of use window\r\n        view = iglooAnalytics(contentAnalyzed, 'view'); // check initial load if widget is available\r\n        //TODO COMBINE TIMERS TO GET A MORE ACCURATE TIME INTERVAL REPORTING\r\n        analyticsSession(); // get session ID first\r\n        analyticsWindowFocus();\r\n        analyticsDwellEngagement();\r\n        analyticsViewScroll(contentAnalyzed);\r\n    };\r\n\r\n    /** igloo.utils.elementIsVisible(element, debug_div, igloo_debug, min_percent)\r\n     * This function checks if a given element is 60% or more in the viewport\r\n     * @param  {DOMElement}  element     The element to check for visibility\r\n     * @param  {DOMElement}  debug_div   The debugging div to put the % visible in\r\n     * @param  {Boolean}     igloo_debug The debugging state of igloo\r\n     * @param  {Number}      min_percent The minimum percent for an element to be\r\n     *                                   considered in view (default 0.6)\r\n     * @return {Boolean}                 Whether the element is in view\r\n     */\r\n    /** https://github.com/passit/adstack/blob/adstack/prod/src/js/IglooModule.js#L37\r\n     * igloo.browser\r\n     * This object describes the current browser including name, version, mobile,\r\n     * and bot\r\n     * @type {Object}\r\n     * @key  {String}  name    The name of the broswer (Chrome, IE, etc)\r\n     * @key  {String}  version The version of the browser\r\n     * @key  {Boolean} bot     Whether the browser is a bot or not\r\n     * @key  {Boolean} mobile  Whether the browser is mobile or not\r\n     */\r\n    function iglooAnalytics(contentElement, type, percent) {\r\n        if (typeof percent == 'undefined') {\r\n            percent = 0.5; //default 50% visibility\r\n        }\r\n        if (igloo) {\r\n            try {\r\n                switch (type) {\r\n                    case 'view':\r\n                        return igloo.utils.elementIsVisible(contentElement, null, false, percent);\r\n                        break;\r\n                    case 'useragent':\r\n                        return igloo.browser;\r\n                        break;\r\n                    default:\r\n                        console.warn('igloo Utility not found');\r\n                        break;\r\n                }\r\n            } catch (e) {\r\n                console.warn('igloo not found', e);\r\n            }\r\n        }\r\n    }\r\n\r\n    //TODO MUST USE TIMESTAMPS ON CERTAIN TIMERS TO GET A MORE PROPER TIME ANALYTICS;\r\n    /**timer(name, tick, stopAt, debug_element)\r\n     * Function to create a timer with variable features to startTime, pauseTime, get, or even auto pauseTime\r\n     * @type {Object}\r\n     * @key  {String} name    give the timer a name to track\r\n     * @key  {Number} tick    tick is how many times the interval Timer should update the time(ms)\r\n     * @key  {Number} stopAt  if you want the time to auto pauseTime at a certain time(ms)\r\n     * @key  {Object} debug_div  the element (div/span/etc..) you want to debug off of\r\n     * @key  {Object} createFunction runs the function user creates every interval\r\n     */\r\n    function timer(name, tick, stopAt, debug_element, createFunction) {\r\n        this.name = name;\r\n        this.time = 0;\r\n        this.stopAt = stopAt;\r\n        this.timerOn = false;\r\n        this.tick = tick;\r\n        this.intervalTimer = function () {},\r\n            this.startTime = function () {\r\n                if (!this.timerOn) {\r\n                    this.timerOn = true;\r\n                    var cTimer = this;\r\n                    this.intervalTimer = setInterval(function () {\r\n                        cTimer.time += cTimer.tick;\r\n                        if (cTimer.stopAt && cTimer.time >= cTimer.stopAt) {\r\n                            cTimer.pauseTime();\r\n                        }\r\n                        if (debug_element && debug) {\r\n                            debug_element.innerHTML = cTimer.time;\r\n                        }\r\n                        if (createFunction) {\r\n                            createFunction(cTimer);\r\n                        }\r\n                    }, this.tick);\r\n                }\r\n            },\r\n            this.pauseTime = function () {\r\n                clearInterval(this.intervalTimer);\r\n                this.timerOn = false;\r\n            },\r\n            this.resetTime = function () {\r\n                this.time = 0;\r\n            }\r\n    };\r\n\r\n\r\n    //create an iframe for post request that will be removed once the request has been sent\r\n    function createPayloadFrame(jsonObject) {\r\n        //create friendly iframe to place ourselves inside\r\n        var payloadIframe = document.createElement('iframe');\r\n        var payloadIframeWindow;\r\n        var payloadId = \"snt_payload_id_\" + rand_id;\r\n        payloadIframe.setAttribute(\"id\", payloadId);\r\n        payloadIframe.className = \"report\";\r\n        payloadIframe.width = 1;\r\n        payloadIframe.height = 1;\r\n        payloadIframe.scrolling = 'no';\r\n        payloadIframe.style.overflow = 'hidden';\r\n        payloadIframe.src = 'about:blank';\r\n        payloadIframe.style.border = 'none';\r\n\r\n        contentAnalyzed.parentNode.insertBefore(payloadIframe, contentAnalyzed);\r\n\r\n\r\n        payloadIframeWindow = payloadIframe.contentWindow;\r\n\r\n        //create inline html for payloadIframe\r\n        payloadIframeWindow.document.open();\r\n        payloadIframeWindow.document.write('<scr' + 'ipt type=\"text/javascript\">' + sendPayload(postUrl, jsonObject) + ' </scr' + 'ipt>');\r\n        payloadIframeWindow.document.close();\r\n\r\n        // once postMsg sent the remove the iframe\r\n        var reporting = document.getElementById(payloadId);\r\n        if (typeof reporting.remove === 'function') {\r\n            reporting.remove();\r\n        } else {\r\n            reporting.outerHTML = '';\r\n        }\r\n    }\r\n\r\n    function sendPayload(url, jsonObject) {\r\n        // try { TODO re-enable when ready\r\n        //     if (typeof jsonObject == 'object') {\r\n        //         var postXML = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        //         postXML.open(\"POST\", url, true);\r\n        //         postXML.send(JSON.stringify(jsonObject))\r\n        //         // setTimeout(function(){\r\n        //         //   postXML.abort(); // aborts the xhttp and sets readyState to 0 as (UNSENT)\r\n        //         // },200);\r\n        //     }\r\n        // } catch (e) {\r\n        //     console.warn(\"Product Analytics Error in Post Request\", e)\r\n        // }\r\n    }\r\n\r\n\r\n    var jsonInfo = {\r\n        \"bo\": \"bounce - number == should only ever be 1, never more than due to submission on a payload level. 0||1 \", // bounce\r\n        \"cl\": \"clicks - number == amount since last payload CURRENT||RESETS\", //total clicks\r\n        \"eb\": \"total embeds - number == amount since last payload CURRENT\", //total embeds on the page\r\n        \"ed\": \"engage dwell - number == amount since last payload CURRENT||RESETS\", //engaged dwell\r\n        \"ev\": \"embed views - number == should only ever be 1, never more than due to submission on a payload level CURRENT\", // embed views\r\n        \"mo\": \"mobile - boolean 0||1\", //mobile\r\n        \"pa\": \"partner id - number\", //partner id\r\n        \"pl\": \"placement id - string\", //placement id\r\n        \"si\": \"session id - string\", // i need to generate this myself\r\n        \"vd\": \"view dwell - number == amount since last payload CURRENT||RESETS\" //view dwell after engagements\r\n    };\r\n\r\n    function updatePayload(send) {\r\n        if (igloo) {\r\n            if (payloadFail <= 10) {\r\n                try {\r\n                    storeSession = storeSessionFn.get();\r\n                    //TODO TEST VARIABLES\r\n                    var listId = 12314214;\r\n                    if (view && (storeSession['listId'] != listId)) {\r\n                        storeSession['listId'] = listId;\r\n                        storeSessionFn.set(storeSession);\r\n                    }\r\n                    if (oneSecMRCcheck) {\r\n                        embed_view = 1; // if view is true then set it to 1 otherwise keep its current state;\r\n                    }\r\n                    jsonObject = {\r\n                        \"ct\": content_title,\r\n                        \"bo\": bounce, // bounce\r\n                        \"cl\": total_clicks ? total_clicks : 0, //total clicks\r\n                        \"eb\": total_embeds ? total_embeds : 0, //total embeds on the page\r\n                        \"ed\": engageDwell ? engageDwell.time : 0, //engaged dwell\r\n                        \"ev\": embed_view, // embed views\r\n                        \"li\": storeSession['listId'],\r\n                        \"lv\": viewDwell ? viewDwell.time : 0, // TODO talk to backend. this may be just an aggregation on their end of viewDwell based on listID\r\n                        \"mo\": userAgentObj.mobile ? 1 : 0, //mobile\r\n                        \"pa\": query.event.p, //partner id\r\n                        \"pl\": query.event.z && query.event.z != '' ? query.event.z : '0', //placement id\r\n                        \"si\": sessionId, // i need to generate this myself\r\n                        \"vd\": viewDwell ? viewDwell.time : 0, //view dwell\r\n                    };\r\n                    isMobile = jsonObject['mo'];\r\n                    if (send == 'send') {\r\n                        createPayloadFrame(jsonObject);\r\n                        jsonObject = {};\r\n                        resetAnalytics();\r\n                    } else {\r\n                        // for (var obj in jsonObject) {\r\n                        //     log(obj + ':' + jsonObject[obj] + ':\\t\\t' + jsonInfo[obj]);\r\n                        // };\r\n                    }\r\n                } catch (e) {\r\n                    payloadFail++;\r\n                    console.log('%cerror updating payload                                                     ', 'background: linear-gradient(#7a0000, #000000); border: 1px solid #3E0E02; color: white');\r\n                    console.warn(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function analyticsWindowFocus() {\r\n        var focused = true;\r\n\r\n        var hidden = \"hidden\";\r\n\r\n        // Standards:\r\n        if (hidden in document)\r\n            document.addEventListener(\"visibilitychange\", onchange);\r\n        else if ((hidden = \"mozHidden\") in document)\r\n            document.addEventListener(\"mozvisibilitychange\", onchange);\r\n        else if ((hidden = \"webkitHidden\") in document)\r\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\r\n        else if ((hidden = \"msHidden\") in document)\r\n            document.addEventListener(\"msvisibilitychange\", onchange);\r\n        // IE 9 and lower:\r\n        else if (\"onfocusin\" in document)\r\n            document.onfocusin = document.onfocusout = onchange;\r\n        // All others:\r\n        else\r\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\r\n\r\n        function onchange(evt) {\r\n            var v = \"visible\",\r\n                h = \"hidden\",\r\n                evtMap = {\r\n                    focus: v,\r\n                    focusin: v,\r\n                    pageshow: v,\r\n                    blur: h,\r\n                    focusout: h,\r\n                    pagehide: h\r\n                };\r\n\r\n            evt = evt || window.event;\r\n\r\n            storeSession = storeSessionFn.get();\r\n\r\n            if (this[hidden]) {\r\n                isActive = false;\r\n                storeSession['before_time'] = Date.now();\r\n                storeSession['after_time'] = Date.now();\r\n                storeSession['session_id'] = storeSession.session_id ? storeSession.session_id : sessionId;\r\n\r\n                sessionStorage.setItem('snt_analytics', JSON.stringify(storeSession));\r\n            } else {\r\n                isActive = true;\r\n                storeSession['before_time'] = storeSession['before_time'] ? storeSession['before_time'] : Date.now();\r\n                storeSession['after_time'] = Date.now();\r\n                storeSession['session_id'] = storeSession.session_id ? storeSession.session_id : sessionId;\r\n                sessionStorage.setItem('snt_analytics', JSON.stringify(storeSession));\r\n            }\r\n            if ((storeSession['after_time'] - storeSession['before_time']) >= timeToLive) {\r\n                iglooTries = 0;\r\n                getIgloo(); // RESET ENTIRE TEST\r\n            }\r\n        }\r\n\r\n        // set the initial state (but only if browser supports the Page Visibility API)\r\n        if (document[hidden] !== undefined)\r\n            onchange({\r\n                type: document[hidden] ? \"blur\" : \"focus\"\r\n            });\r\n    }\r\n\r\n    //setup the event listeners if user becomes active trigger start timer\r\n    function set_idle_listeners() {\r\n        window.top.document.addEventListener(\"mousemove\", start_timer, false);\r\n        window.top.document.addEventListener(\"mousedown\", start_timer, false);\r\n        window.top.document.addEventListener(\"keypress\", start_timer, false);\r\n        window.top.document.addEventListener(\"DOMMouseScroll\", start_timer, false);\r\n        window.top.document.addEventListener(\"mousewheel\", start_timer, false);\r\n        window.top.document.addEventListener(\"touchstart\", start_timer, false);\r\n        window.top.document.addEventListener(\"touchmove\", start_timer, false);\r\n        window.top.document.addEventListener(\"MSPointerMove\", start_timer, false);\r\n\r\n        var debugSession = window.top.document.getElementById('sessionTest');\r\n        if (!widgetEngaged || !view) {\r\n            if (sessionTimer) {\r\n                if (!sessionTimer.timerOn) {\r\n                    sessionTimer.startTime();\r\n                }\r\n            } else {\r\n                sessionTimer = new timer('session', 100, timeToLive, debugSession, function (event) {\r\n                    if (event.time >= event.stopAt) {\r\n                        event.pauseTime();\r\n                        event.resetTime();\r\n                        sessionStorage.removeItem('snt_analytics');\r\n                        iglooTries = 0;\r\n                        getIgloo(); // RESET ENTIRE TEST\r\n                    }\r\n                }); //timeToLive in (ms) is 10 minutes\r\n                sessionTimer.startTime();\r\n            }\r\n        } else {\r\n            sessionTimer.pauseTime();\r\n            sessionTimer.resetTime();\r\n        }\r\n    }\r\n\r\n    //if user becomes active, remove event listeners so we dont polute the event space\r\n    function start_timer() {\r\n        window.top.document.removeEventListener(\"mousemove\", start_timer, false);\r\n        window.top.document.removeEventListener(\"mousedown\", start_timer, false);\r\n        window.top.document.removeEventListener(\"keypress\", start_timer, false);\r\n        window.top.document.removeEventListener(\"DOMMouseScroll\", start_timer, false);\r\n        window.top.document.removeEventListener(\"mousewheel\", start_timer, false);\r\n        window.top.document.removeEventListener(\"touchstart\", start_timer, false);\r\n        window.top.document.removeEventListener(\"touchmove\", start_timer, false);\r\n        window.top.document.removeEventListener(\"MSPointerMove\", start_timer, false);\r\n\r\n        isActive = true;\r\n        sessionTimer.pauseTime();\r\n        sessionTimer.resetTime();\r\n\r\n        dwellLimitTimer.resetTime();\r\n        dwellLimitTimer.startTime();\r\n\r\n        if (!widgetEngaged) {\r\n            set_idle_listeners();\r\n        }\r\n    }\r\n\r\n    function analyticsSession() {\r\n        var sessionTest,\r\n            s_id;\r\n        var sstorage = storeSessionFn.get();\r\n        sessionId = sstorage && sstorage.session_id ? sstorage.session_id : randomString(16); //Generate a session ID\r\n        sstorage.session_id = sessionId;\r\n        storeSessionFn.set(sstorage);\r\n\r\n        set_idle_listeners();\r\n    }\r\n\r\n\r\n    function analyticsViewScroll(element) {\r\n        try {\r\n            var viewTest,\r\n                createTimer;\r\n\r\n            var payloadTimer = 3000, // (ms) Initial payload timer 0.5 seconds\r\n                payloadLimit = 5000,\r\n                payloadTempTimer = 0; // (ms) Initial payload limit 10 seconds\r\n\r\n            // if (!window.document.getElementById('viewTest')) {\r\n            //     viewTest = window.document.createElement('div');\r\n            //     viewTest.id = 'viewTest';\r\n            //     viewTest.style = \"position:fixed;top:0;right:0;background:black;color:white;font-size:20px;z-index:100\";\r\n            //     window.document.body.insertBefore(viewTest, window.document.body.firstElementChild);\r\n            // }\r\n\r\n            var debugView = window.document.getElementById('viewTest');\r\n\r\n            var debugTimer = window.document.getElementById('viewDwell');\r\n\r\n            viewDwell = viewDwell ? viewDwell : new timer('view', 500, null, debugTimer, function (event) {\r\n                if (viewEngaged) {\r\n                    question_view = 1;\r\n                    bounce = 1; // trivia engaged the question is now always able to be a bounced question until user clicks next question then metrics will change;\r\n                }\r\n\r\n                if (view) {\r\n                    oneSecMRC += event.tick;\r\n                    if (oneSecMRC >= 1000) { // if oneSecMRC variable every reaches 1 second or more it will set the check to true\r\n                        oneSecMRCcheck = true;\r\n                    }\r\n                } else { // should go straight into dwellLimitTimer if CU no longer in view but if it reaches this then it should reset oneSecMRC variable\r\n                    oneSecMRC = 0;\r\n                }\r\n                if (!widgetEngaged && !dwellLimitTimer.timerOn) {\r\n                    isActive = false;\r\n                }\r\n                if (!widgetEngaged) {\r\n                    set_idle_listeners(); // create Session Timer to listen for any event and determine if the use is idle\r\n                    engageDwell.pauseTime();\r\n                    if (isActive) {\r\n                        sessionTimer.resetTime();\r\n                        sessionTimer.pauseTime();\r\n                        var payT = (isActiveTimer % payloadTimer);\r\n                        if (payT == 0) {\r\n                            if (!view) { // makes sure if widget is not in view to send 0 in for viewdwell.\r\n                                event.time = 0;\r\n                            }\r\n                            if ((payloadTempTimer % payloadTimer) == 0 && payloadTempTimer != 0) {\r\n                                updatePayload('send');\r\n                            }\r\n                            if (payloadTempTimer == 3000 && payloadTimer == 3000) {\r\n                                payloadTimer = 10000;\r\n                                payloadTempTimer = 0;\r\n                                isActiveTimer = 0;\r\n                            }\r\n                        } // payT\r\n                        payloadTempTimer += event.tick;\r\n                        isActiveTimer += event.tick;\r\n                    }\r\n                } // widgetEngaged\r\n            });\r\n\r\n\r\n            window.top.addEventListener(\"scroll\", function () { // create listener on scroll to detect if widget in view\r\n                if (!viewDwell) {\r\n                    viewDwell = new timer('view', 100, null, debugTimer);\r\n                }\r\n                view = iglooAnalytics(element, 'view');\r\n\r\n                if (debugView) {\r\n                    debugView.innerHTML = 'view: ' + view;\r\n                }\r\n\r\n                if (view && widgetEngaged) { //if in view and engaged set and flag that will always run the viewDwell whenever in view\r\n                    viewEngaged = true;\r\n                } else {\r\n                    viewEngaged = !view && !viewEngaged ? false : viewEngaged;\r\n                }\r\n                if (view) { // if trivia is in view & timer isnt on & trivia is engaged => start timer\r\n                    viewDwell.startTime();\r\n                } else {\r\n                    engageDwell.pauseTime();\r\n                    viewDwell.pauseTime();\r\n                    set_idle_listeners(); // create Session Timer to listen for any event and determin if the use is idle\r\n                }\r\n            });\r\n\r\n            // to be able to initially run the scroll event listener;\r\n            window.top.scrollTo(window.top.scrollX, window.top.scrollY - 1);\r\n            window.top.scrollTo(window.top.scrollX, window.top.scrollY + 1);\r\n        } catch (e) {\r\n            console.warn('ViewScroll Error', e);\r\n        }\r\n    }\r\n\r\n\r\n    function analyticsDwellEngagement() {\r\n        try {\r\n            var dwellTest,\r\n                createTimer,\r\n                dwellLimit;\r\n\r\n            widgetEngaged = false; // by running this make sure to set all values to its default\r\n\r\n            // if (!window.document.getElementById('dwellTest')) {\r\n            //     dwellTest = window.document.createElement('div');\r\n            //     dwellTest.id = 'dwellTest';\r\n            //     dwellTest.style = \"position:fixed;top:0;left:0;background:black;color:white;font-size:20px;z-index:100\";\r\n            //     window.document.body.insertBefore(dwellTest, window.document.body.firstElementChild);\r\n            // }\r\n            var debugDwell = window.document.getElementById('dwellTest');\r\n\r\n            var dwellTime = window.document.getElementById('engageDwell');\r\n\r\n            var debugLimit = window.document.getElementById('dwellLimit');\r\n\r\n            engageDwell = new timer('dwell', 100, null, dwellTime);\r\n            dwellLimitTimer = new timer('dwellLimit', 1000, 10000, debugLimit, function (event) {\r\n                if ((event.time >= event.stopAt) && engageDwell) {\r\n                    isActive = false;\r\n\r\n                    if (engageDwell.timerOn) {\r\n                        engageDwell.time = (engageDwell.time - event.stopAt) < 0 ? 0 : engageDwell.time - event.stopAt;\r\n                    }\r\n                    engageDwell.pauseTime();\r\n                    sessionTimer.resetTime();\r\n                    if (!widgetEngaged) { // if the widget engage is false then make sure to reset the viewDwell timer since javascript could cause delay in sending payload\r\n                        viewDwell.resetTime();\r\n                    }\r\n\r\n                    updatePayload('send');\r\n                    if (!view) {\r\n                        oneSecMRC = 0;\r\n                        viewDwell.pauseTime();\r\n                    }\r\n                    widgetEngaged = false;\r\n\r\n                }\r\n                if (!view) { // viewDwell Timer stops and dwellLimitTimer starts when CU no longer in view so to make sure we reset the variable here\r\n                    oneSecMRC = 0;\r\n                }\r\n            }); //create new timer with limit of 10 seconds\r\n\r\n            // debugDwell.innerHTML = 'dwell: ' + widgetEngaged; //initial debug\r\n            contentAnalyzed.onmouseover = function () { // create listener if widget becomes engaged\r\n                question_view = 1; // set current question view to 1;\r\n                bounce = 1; // trivia engaged the question is now always able to be a bounced question until user clicks next question then metrics will change;\r\n                dwellLimitTimer.resetTime();\r\n                if (!widgetEngaged) {\r\n                    widgetEngaged = true;\r\n                    viewEngaged = true;\r\n\r\n                    engageDwell.startTime();\r\n                    dwellLimitTimer.startTime();\r\n\r\n                    if (!viewDwell.timerOn) {\r\n                        viewDwell.startTime();\r\n                    }\r\n\r\n                    updatePayload('send');\r\n\r\n                } else {\r\n                    dwellLimitTimer.resetTime();\r\n                }\r\n            }\r\n\r\n        } catch (e) {\r\n            console.warn('DwellEngagement Error', e);\r\n        }\r\n    }\r\n\r\n\r\n    function resetAnalytics() {\r\n        if (viewDwell) {\r\n            viewDwell.pauseTime();\r\n            viewDwell.resetTime();\r\n            viewDwell.startTime();\r\n        }\r\n        if (engageDwell) {\r\n            engageDwell.resetTime();\r\n        }\r\n        total_clicks = 0;\r\n        bounce = 0;\r\n        skipped = 0;\r\n    }\r\n\r\n    /*\r\n     ****************************************************************************************************************************************\r\n     ****************ANALYTICS VARIABLES END*************************************************************************************************\r\n     ****************************************************************************************************************************************\r\n     */\r\n\r\n\r\n    /*\r\n     ****************************************************************************************************************************************\r\n     ****************GLOBAL FUNCTIONS *******************************************************************************************************\r\n     ****************************************************************************************************************************************\r\n     */\r\n\r\n\r\n    /**\r\n     * RANDOM STRING GENERATOR\r\n     *\r\n     * Info:      http://stackoverflow.com/a/27872144/383904\r\n     * Use:       randomString(length [,\"A\"] [,\"N\"] );\r\n     * Default:   return a random alpha-numeric string\r\n     * Arguments: If you use the optional \"A\", \"N\" flags:\r\n     *            \"A\" (Alpha flag)   return random a-Z string\r\n     *            \"N\" (Numeric flag) return random 0-9 string\r\n     */\r\n    function randomString(len, an) {\r\n        an = an && an.toLowerCase();\r\n        var str = \"\",\r\n            i = 0,\r\n            min = an == \"a\" ? 10 : 0,\r\n            max = an == \"n\" ? 10 : 62;\r\n        for (; i++ < len;) {\r\n            var r = Math.random() * (max - min) + min << 0;\r\n            str += String.fromCharCode(r += r > 9 ? r < 36 ? 55 : 61 : 48);\r\n        }\r\n        return str;\r\n    }\r\n\r\n    function getDomain(url) {\r\n        var hostName = getHostName(url);\r\n        var domain = hostName;\r\n        if (hostName != null) {\r\n            var parts = hostName.split('.').reverse();\r\n            if (parts != null && parts.length > 1) {\r\n                domain = parts[1] + '.' + parts[0];\r\n                if (hostName.toLowerCase().indexOf('.co.uk') != -1 && parts.length > 2) {\r\n                    domain = parts[2] + '.' + domain;\r\n                }\r\n            }\r\n        }\r\n        return domain;\r\n    }\r\n\r\n    function getHostName(url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getEnv(env) {\r\n        if (env.match(/^homestead/) != null || env.match(/^localhost/) != null || env.match(/^dev/) != null) {\r\n            env = \"dev-\";\r\n        } else if (env.match(/^qa/) != null) {\r\n            env = \"qa-\";\r\n        } else {\r\n            env = \"prod-\";\r\n        }\r\n        return env;\r\n    }\r\n\r\n    /**\r\n     * Send a post message to every window up to the top window\r\n     * @param  {Object}  postObject The object to send as a postMessage\r\n     * @param  {Integer} maxLoops   The maximum number of layers to traverse up\r\n     */\r\n    function sendPostMessageToIgloo(postObject, maxLoops) {\r\n        // Initialize variables\r\n        var postWindows = [window];\r\n        var currentWindow = window;\r\n        var currentLoop = 0;\r\n        maxLoops = typeof maxLoops === 'undefined' ? 10 : maxLoops;\r\n\r\n        // Build all of the windows to send the message to\r\n        try {\r\n            // Loop through all of the windows\r\n            while (currentLoop++ < maxLoops && currentWindow !== window.top) {\r\n                // Move up a layer\r\n                currentWindow = currentWindow.parent;\r\n\r\n                // Add to the postMessage array\r\n                postWindows.push(currentWindow);\r\n\r\n            }\r\n        } catch (e) {}\r\n        // Send the post messages\r\n        for (var i = 0; i < postWindows.length; i++) {\r\n            postWindows[i].postMessage(postObject, '*');\r\n        }\r\n    }\r\n\r\n    //STYLES used in console\r\n    var analyticsStyles = [\r\n        'background: linear-gradient(#2a9a13, #000000)', 'border: 1px solid #3E0E02', 'color: white', 'text-shadow: 0 1px 0 rgba(0, 0, 0, 0.3)', 'text-align: center', 'font-weight: bold'\r\n    ].join(';');\r\n    var payloadStyles = [\r\n        'background: linear-gradient(#4e028a, #000000)', 'border: 1px solid #3E0E02', 'color: white', 'text-shadow: 0 1px 0 rgba(0, 0, 0, 0.3)', 'text-align: center', 'font-weight: bold'\r\n    ].join(';');\r\n    var defaultStyle = [\r\n        'background: linear-gradient(#000000, #6e6e6e)', 'border: 1px solid #3E0E02', 'color: #1fc134', 'text-shadow: 0 1px 0 rgba(0, 0, 0, 0.3)', 'text-align: center', 'font-weight: bold'\r\n    ].join(';');\r\n\r\n    //style log to use for coloring develop tool console\r\n    function log(msg, style) {\r\n        // if (debug) {\r\n        if (!style) {\r\n            style = defaultStyle;\r\n        }\r\n        console.log('%c' + msg + '', style);\r\n        // }\r\n    };\r\n    /*\r\n     ****************************************************************************************************************************************\r\n     ****************GLOBAL FUNCTIONS END*************************************************************************************************\r\n     ****************************************************************************************************************************************\r\n     */\r\n\r\n\r\n    //#0 START WIDGET\r\n    getIgloo();\r\n\r\n})();\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!DOCTYPE html>\\r\\n<html lang=en>\\r\\n\\r\\n<head>\\r\\n  <title>Slider</title>\\r\\n  <meta charset=utf-8>\\r\\n  <base target=_blank>\\r\\n  <meta name=viewport content=\\\"width=device-width,initial-scale=1\\\">\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n</body>\\r\\n\\r\\n</html>\\r\\n\";\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(3)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \"@font-face {\\r\\n    font-family: 'Lato';\\r\\n    font-style: normal;\\r\\n    font-weight: 400;\\r\\n    src: local('Lato Regular'), local('Lato-Regular'), url(http://fonts.gstatic.com/s/lato/v13/8qcEw_nrk_5HEcCpYdJu8BTbgVql8nDJpwnrE27mub0.woff2) format('woff2');\\r\\n    unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;\\r\\n}\\r\\n\\r\\n/* latin */\\r\\n@font-face {\\r\\n    font-family: 'Lato';\\r\\n    font-style: normal;\\r\\n    font-weight: 400;\\r\\n    src: local('Lato Regular'), local('Lato-Regular'), url(http://fonts.gstatic.com/s/lato/v13/MDadn8DQ_3oT6kvnUq_2r_esZW2xOQ-xsNqO47m55DA.woff2) format('woff2');\\r\\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\\r\\n}\\r\\n\\r\\n/* latin-ext */\\r\\n@font-face {\\r\\n    font-family: 'Lato';\\r\\n    font-style: normal;\\r\\n    font-weight: 700;\\r\\n    src: local('Lato Bold'), local('Lato-Bold'), url(http://fonts.gstatic.com/s/lato/v13/rZPI2gHXi8zxUjnybc2ZQFKPGs1ZzpMvnHX-7fPOuAc.woff2) format('woff2');\\r\\n    unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;\\r\\n}\\r\\n\\r\\n/* latin */\\r\\n@font-face {\\r\\n    font-family: 'Lato';\\r\\n    font-style: normal;\\r\\n    font-weight: 700;\\r\\n    src: local('Lato Bold'), local('Lato-Bold'), url(http://fonts.gstatic.com/s/lato/v13/MgNNr5y1C_tIEuLEmicLmwLUuEpTyoUstqEm5AMlJo4.woff2) format('woff2');\\r\\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    font-family: lato, helvetica;\\r\\n    border: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    -webkit-overflow-scrolling: touch;\\r\\n    -webkit-user-select: none;\\r\\n    -khtml-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    -o-user-select: none;\\r\\n    user-select: none;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    -webkit-user-select: none;\\r\\n    -khtml-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    -o-user-select: none;\\r\\n    user-select: none;\\r\\n    -webkit-user-drag: none;\\r\\n    -khtml-user-drag: none;\\r\\n    -moz-user-drag: none;\\r\\n    -o-user-drag: none;\\r\\n    user-drag: none;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n    background-position: 50%;\\r\\n    background-repeat: no-repeat;\\r\\n    height: 39px;\\r\\n    width: 26px;\\r\\n}\\r\\n\\r\\n.wrapper {\\r\\n    position: absolute;\\r\\n    overflow: hidden;\\r\\n    width: 100%;\\r\\n    height: 250px;\\r\\n    background-color: #f7f7f7;\\r\\n    border: 1px solid #e1e1e1;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.edge_shader {\\r\\n    position: absolute;\\r\\n    right: -5px;\\r\\n    top: 0;\\r\\n    width: 3px;\\r\\n    height: 100%;\\r\\n    box-shadow: -5px 0 10px rgba(0, 0, 0, 0.8);\\r\\n    z-index: 999;\\r\\n    transition: opacity 0.2s ease-in-out;\\r\\n}\\r\\n\\r\\n.title_overlay {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n\\r\\n.title_image_div {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    overflow: hidden;\\r\\n    position: absolute;\\r\\n    border-radius: 2px;\\r\\n    background-size: 1000% 1000%;\\r\\n    image-rendering: optimizeSpeed; /*                     */\\r\\n    image-rendering: -moz-crisp-edges; /* Firefox             */\\r\\n    image-rendering: -o-crisp-edges; /* Opera               */\\r\\n    image-rendering: -webkit-optimize-contrast; /* Chrome (and Safari) */\\r\\n    image-rendering: optimize-contrast; /* CSS3 Proposed       */\\r\\n    -ms-interpolation-mode: nearest-neighbor; /* IE8+                */\\r\\n    /*border-bottom: 1px solid rgba(50,50,50,0.1);*/\\r\\n}\\r\\n\\r\\n.title_image_div.overlay::before {\\r\\n    content: \\\"\\\";\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    position: absolute;\\r\\n    opacity: 0.9;\\r\\n    background-color: inherit;\\r\\n}\\r\\n\\r\\n.title_image {\\r\\n    width: auto;\\r\\n    height: 100%;\\r\\n    background-size: contain;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    left: 0;\\r\\n    width: 200px;\\r\\n    height: auto;\\r\\n    white-space: normal;\\r\\n    padding: 15px 15px;\\r\\n    font-weight: 900;\\r\\n    color: #fff;\\r\\n    font-size: 20px;\\r\\n    transition: opacity 0.2s ease-in-out;\\r\\n    z-index: 9;\\r\\n}\\r\\n\\r\\n.instructions_container {\\r\\n    position: absolute;\\r\\n    font-size: 14px;\\r\\n    font-weight: bold;\\r\\n    font-style: italic;\\r\\n    line-height: 1.14;\\r\\n    text-align: left;\\r\\n    color: #fff;\\r\\n    left: 30px;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.instructions_icon {\\r\\n    position: relative;\\r\\n    width: 25px;\\r\\n    height: 31px;\\r\\n}\\r\\n\\r\\n.instructions_text {\\r\\n    width: 150px;\\r\\n    opacity: 0.7;\\r\\n    position: relative;\\r\\n    left: 34px;\\r\\n    top: -26px;\\r\\n    white-space: normal;\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\\r\\n.pointer {\\r\\n    pointer-events: none;\\r\\n    position: absolute;\\r\\n    box-sizing: border-box;\\r\\n    width: 56px;\\r\\n    right: 0;\\r\\n    top: 50%;\\r\\n    transform: translateY(-50%);\\r\\n    padding: 10.5px 5px 10.5px 10px;\\r\\n    /*font-weight: 300;*/\\r\\n    font-size: 20px;\\r\\n    color: white;\\r\\n    fill: white;\\r\\n    border-top-left-radius: 15px;\\r\\n    border-bottom-left-radius: 15px;\\r\\n    overflow: hidden;\\r\\n    -webkit-backdrop-filter: blur(3px);\\r\\n    backdrop-filter: blur(3px);\\r\\n    background-color: rgba(0, 0, 0, 0.8);\\r\\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.26), 0 0 0 1px rgba(0, 0, 0, 0.09);\\r\\n    opacity: 1;\\r\\n    transition: opacity 0.2s ease-in-out;\\r\\n    z-index: 100;\\r\\n}\\r\\n\\r\\n.pointer .icon {\\r\\n    animation: swipe .75s infinite;\\r\\n}\\r\\n\\r\\n@keyframes swipe {\\r\\n    0% {\\r\\n        -webkit-transform: translateX(12px);\\r\\n        -moz-transform: translateX(12px);\\r\\n        -ms-transform: translateX(12px);\\r\\n        -o-transform: translateX(12px);\\r\\n        transform: translateX(12px);\\r\\n        opacity: 1;\\r\\n    }\\r\\n    50% {\\r\\n        -webkit-transform: translateX(0);\\r\\n        -moz-transform: translateX(0);\\r\\n        -ms-transform: translateX(0);\\r\\n        -o-transform: translateX(0);\\r\\n        transform: translateX(0);\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        -webkit-transform: translateX(12px);\\r\\n        -moz-transform: translateX(12px);\\r\\n        -ms-transform: translateX(12px);\\r\\n        -o-transform: translateX(12px);\\r\\n        transform: translateX(12px);\\r\\n        opacity: 1;\\r\\n    }\\r\\n}\\r\\n\\r\\n.slider {\\r\\n    position: relative;\\r\\n    right: 0;\\r\\n    width: 100%;\\r\\n    height: 250px;\\r\\n    white-space: nowrap;\\r\\n    background-color: #f7f7f7;\\r\\n    -ms-overflow-style: none;\\r\\n    z-index: 15;\\r\\n    transition: all 0.6s ease-in-out;\\r\\n}\\r\\n\\r\\n.slider.stopAnim {\\r\\n    -webkit-animation: .5s;\\r\\n    animation: .5s;\\r\\n}\\r\\n\\r\\n.list_wrapper{\\r\\n    height:100%;\\r\\n    display:inline-block;\\r\\n}\\r\\n\\r\\n.slider_block {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    height: 230px;\\r\\n    width: 230px;\\r\\n    margin: 9px 8px;\\r\\n}\\r\\n\\r\\n.list_item {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    background-color: white;\\r\\n    border-radius: 3px;\\r\\n    border: 1px solid #e1e1e1;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.ad_spacer {\\r\\n    width: 296px;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.ad_item {\\r\\n    position: absolute;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    z-index: 99;\\r\\n}\\r\\n\\r\\n.profile_image_div {\\r\\n    width: 100%;\\r\\n    height: 150px;\\r\\n    display: block;\\r\\n    overflow: hidden;\\r\\n    position: absolute;\\r\\n    border-top-left-radius: 2px;\\r\\n    border-top-right-radius: 2px;\\r\\n    background-size: 1000% 1000%;\\r\\n    image-rendering: optimizeSpeed; /*                     */\\r\\n    image-rendering: -moz-crisp-edges; /* Firefox             */\\r\\n    image-rendering: -o-crisp-edges; /* Opera               */\\r\\n    image-rendering: -webkit-optimize-contrast; /* Chrome (and Safari) */\\r\\n    image-rendering: optimize-contrast; /* CSS3 Proposed       */\\r\\n    -ms-interpolation-mode: nearest-neighbor; /* IE8+                */\\r\\n    /*border-bottom: 1px solid rgba(50,50,50,0.1);*/\\r\\n}\\r\\n\\r\\n.profile_image_div.fallback::before {\\r\\n    content: \\\"\\\";\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    position: absolute;\\r\\n    z-index: 99;\\r\\n    opacity: 0.6;\\r\\n    background-color: inherit;\\r\\n}\\r\\n\\r\\n.profile_image {\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 50%;\\r\\n    transform: translateY(-50%);\\r\\n}\\r\\n\\r\\n.num {\\r\\n    position: absolute;\\r\\n    right: -5px;\\r\\n    top: -20px;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-top: 30px solid transparent;\\r\\n    border-bottom: 30px solid transparent;\\r\\n    border-left: 30px solid black;\\r\\n    transform: rotate(-45deg);\\r\\n    z-index: 100;\\r\\n}\\r\\n\\r\\n.num_text {\\r\\n    font-size: 10px;\\r\\n    color: white;\\r\\n    width: 20px;\\r\\n    top: -9px;\\r\\n    right: 8px;\\r\\n    text-align: center;\\r\\n    font-weight: 300;\\r\\n    position: absolute;\\r\\n    transform: rotate(45deg);\\r\\n}\\r\\n\\r\\n.num_text b {\\r\\n    position: relative;\\r\\n    top: 2px;\\r\\n    font-size: 12px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.info {\\r\\n    width: 100%;\\r\\n    height: 80px;\\r\\n    position: absolute;\\r\\n    top: 150px;\\r\\n    display: table;\\r\\n}\\r\\n\\r\\n.info .info_container {\\r\\n    display: table-cell;\\r\\n    vertical-align: middle;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.name {\\r\\n    font-size: 14px;\\r\\n    width: 215px;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    padding: 0 5px;\\r\\n}\\r\\n\\r\\n.symbl, .location {\\r\\n    font-size: 12px;\\r\\n    color: #bebebe;\\r\\n    max-width: 95%;\\r\\n    padding: 0 5px;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.location {\\r\\n    margin-bottom: 5px;\\r\\n    max-width: 95%;\\r\\n    padding: 0 5px;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.bold{\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.value {\\r\\n    width: 215px;\\r\\n    font-size: 20px;\\r\\n    color: #272727;\\r\\n    margin-top: 3px;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    padding: 0 5px;\\r\\n}\\r\\n\\r\\n.stat_type {\\r\\n    width: 215px;\\r\\n    font-size: 12px;\\r\\n    color: #666666;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    padding: 0 5px;\\r\\n}\\r\\n\\r\\n.next_list {\\r\\n    font-size: 12px;\\r\\n    position: relative;\\r\\n    top: -96px;\\r\\n    width: 56px;\\r\\n    margin: 0 5px 0 0;\\r\\n    padding: 80px 10px 88px 10px;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.next_arrow {\\r\\n    font-size: 30px;\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.slider_ad_zone {\\r\\n    width: 100%;\\r\\n    height: 250px;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    background-color: rgba(0, 0, 0, 0.9);\\r\\n    z-index: 15;\\r\\n    display: none;\\r\\n    -webkit-animation-fill-mode: both;\\r\\n    -moz-animation-fill-mode: both;\\r\\n    -ms-animation-fill-mode: both;\\r\\n    -o-animation-fill-mode: both;\\r\\n    animation-fill-mode: both;\\r\\n    -webkit-animation-duration: 3.2s;\\r\\n    -moz-animation-duration: 3.2s;\\r\\n    -ms-animation-duration: 3.2s;\\r\\n    -o-animation-duration: 3.2s;\\r\\n    animation-duration: 3.2s;\\r\\n}\\r\\n\\r\\n.slider_background {\\r\\n    position: relative;\\r\\n    width: 300px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n.ad_progress_fill {\\r\\n    width: 100%;\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    z-index: 100;\\r\\n    height: 3px;\\r\\n    background: #000;\\r\\n    opacity: .1;\\r\\n}\\r\\n\\r\\n.ad_progress_bar {\\r\\n    position: absolute;\\r\\n    bottom: 2px;\\r\\n    z-index: 100;\\r\\n    height: 3px;\\r\\n    background: #3098ff;\\r\\n    background: -webkit-linear-gradient(left, #3098ff 0%, #3098ff 0%, #34d4ff 100%); /* Chrome10-25,Safari5.1-6 */\\r\\n    background: linear-gradient(to right, #3098ff 0%, #3098ff 0%, #34d4ff 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fade {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    10% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    90% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@-moz-keyframes fade {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    10% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    90% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@-o-keyframes fade {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    10% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    90% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@keyframes fade {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    10% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    90% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.fade_in_out {\\r\\n    -webkit-animation-name: fade;\\r\\n    -moz-animation-name: fade;\\r\\n    -o-animation-name: fade;\\r\\n    animation-name: fade;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// main.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cdc3379429ee3a60a0aa","(function () {\r\n    //Global Variables\r\n    var protocolToUse = (location.protocol == \"https:\") ? \"https://\" : \"http://\";\r\n    var $;\r\n    var iglooTries = 0;\r\n    var totalTries = 10;\r\n\r\n    var imageUrl = \"images.synapsys.us\"; // this is global call that is used for images\r\n    var dwApi = \"dw.synapsys.us/list_api.php\"; // dynamic widget api\r\n    var waldo = \"waldo.synapsys.us/getlocation/2\";\r\n    var postUrl = \"-pa.synapsys.us/\";\r\n    var apiCallUrl; // this is global call that is used for api calls\r\n    var fallBackApi; // used for nfl and ncaaf category\r\n    var tries = 0; // flag for api to try at least 10 times before failing completely\r\n    var maxTries = 5;\r\n    var rand_id = Math.floor(Math.random() * 1000);\r\n    var listRand = Math.floor((Math.random() * 100) + 1); // used to increment index of random list in database\r\n    //Creative Unit Data related variables\r\n    var widgetData; // api returns is sent here\r\n    var subCategory; // with a vast amount groups and categories need we need the currently shown category for the rest of the code\r\n    var currentIndex = 0; // current index of an array which (default = 0)\r\n    var maxIndex = 1; //declare max index of returned data (default = 1)\r\n    var getLocation; // in case location data is needed\r\n    var svgIcon = \"<svg version='1.1' x='0px' y='0px' width='26' height='39' viewBox='0 0 26 39' opacity='1' \" +\r\n        \"xml:space='preserve'><g  fill='#FFF' fill-rule='evenodd'><path d='M10.677 8c-1.773 0-3.226 1.47-3.226 3.263v11.23c-.499-1.091-1.395-2.272-2.52-2.562-1.53-.42-3.403.817-3.83 2.256-.218.801-.076 1.714.353 2.83 2.094 5.095 4.674 9.988 7.812 13.703.15.175.376.278.605.28h10.887a.804.804 0 0 0 .478-.166c1.161-.87 2.097-2.351 2.873-4.117a23.622 23.622 0 0 0 1.676-5.812c.306-1.998.304-3.87-.126-5.532-.414-1.603-1.532-2.938-3.2-3.136a5.235 5.235 0 0 0-1.16.115c-.206-.5-.496-.928-.857-1.186a2.85 2.85 0 0 0-1.713-.56c-.477.007-.912.183-1.298.458-.173-.267-.351-.546-.58-.713a2.904 2.904 0 0 0-1.739-.561c-.417 0-.822.118-1.21.28v-6.807C13.869 9.08 12.168 7.995 10.678 8zm0 1.632c.907 0 1.613.713 1.613 1.631v8.566c-.005.37.27.725.625.808a.83.83 0 0 0 .912-.451c.178-.375.85-.765 1.286-.765.195 0 .559.083.793.255.235.172.416.374.416.969 0 .363.27.707.62.792a.827.827 0 0 0 .905-.423c.327-.662.504-.77.907-.777.112-.002.503.073.756.255.254.181.441.39.441.969a.835.835 0 0 0 .485.755.818.818 0 0 0 .876-.156c.306-.153.606-.2.995-.192.961.125 1.46.733 1.802 1.95.345 1.23.358 2.985.076 4.832s-.838 3.787-1.55 5.404c-.668 1.517-1.484 2.703-2.205 3.315H10.26c-2.83-3.378-5.533-8.566-7.296-12.938-.367-.955-.4-1.505-.315-1.81.3-.79 1.136-1.235 1.853-1.122.857.326 1.07.905 1.436 1.568l1.6 3.25a.828.828 0 0 0 .906.422.84.84 0 0 0 .62-.792V11.263c0-.917.705-1.631 1.612-1.631z'/>\" +\r\n        \"<path d='M4.442 0a.803.803 0 0 0-.58.243L.227 3.923c-.177.165-.22.37-.227.576.006.224.06.403.227.575l3.635 3.681c.296.33.844.318 1.148.013.305-.305.308-.861 0-1.163L2.751 5.317H18.25l-2.26 2.288c-.307.302-.304.858 0 1.163.305.305.854.302 1.15-.013l3.634-3.68c.167-.173.22-.352.227-.576-.008-.206-.05-.41-.227-.575L17.138.243c-.301-.324-.844-.318-1.148-.013-.305.305-.308.861 0 1.163l2.259 2.288H2.75l2.26-2.288c.307-.302.304-.858 0-1.163A.788.788 0 0 0 4.441 0z'/></g></svg> \";\r\n\r\n    //Embed Related variables\r\n    var embedURL = \"slider/min\";\r\n    var currentScript = document.currentScript != null && document.currentScript.src.indexOf(embedURL) != -1 ? document.currentScript : (function () {\r\n        //grab the current script dom element\r\n        // resolution for IE since it does not have currentScript to find the currently running script on the page\r\n        var scripts = document.getElementsByTagName('script');\r\n        for (var i = scripts.length - 1; i >= 0; i--) {\r\n            if (scripts[i].src.indexOf(embedURL) != -1) {\r\n                return scripts[i];\r\n            }\r\n        }\r\n    })();\r\n    var hostname; //host name is obtained by the given url of the script source\r\n    var firstWidgetRun = true; //makes sure the listeners run once\r\n    var windowWidth;\r\n    var query = {}; // QUERY grabbed from database info put into iframe\r\n\r\n\r\n    //Iframe Related variables\r\n    var friendlyIF;\r\n    var IfClassName = 'sliderIframe';\r\n    var iframeStyleObject = { // SET STYLE of IFRAME sent into createNewIframe();\r\n        className: IfClassName,\r\n        width: '300', //default\r\n        height: '250',\r\n        name: currentScript.src,\r\n        style: {\r\n            border: 'none',\r\n            'overflow-x': 'auto',\r\n            'overflow-y': 'hidden'\r\n        }\r\n    };\r\n    var htmlFile = require('../html/index.html');\r\n    var cssFile = require('../css/slider.css');\r\n\r\n\r\n    //#0\r\n    function getIgloo(windowFrame) {\r\n        try {\r\n            windowFrame = windowFrame ? windowFrame : window;\r\n            if (iglooTries < totalTries) {\r\n                iglooTries++;\r\n                if (windowFrame.igloo) {\r\n                    // log(\"#0 getIgloo\");\r\n                    igloo = windowFrame.igloo;\r\n                    creativeUnitSetup();\r\n                } else {\r\n                    getIgloo(windowFrame.parent);\r\n                }\r\n            } else {\r\n                console.warn('igloo not found after 10 tries');\r\n                creativeUnitSetup();\r\n            }\r\n        } catch (e) {\r\n            console.warn('igloo not found error =>', e);\r\n            creativeUnitSetup();\r\n        }\r\n    }\r\n\r\n    //#1\r\n    function creativeUnitSetup() {\r\n        // log(\"#1 creativeUnitSetup\");\r\n\r\n        //Initial load Waits for the DOMContent to load\r\n        if (firstWidgetRun == true && (document.readyState == \"complete\" || document.readyState == \"interactive\")) { // if page is already loaded'\r\n            firstWidgetRun = false;\r\n            friendlyIF = createNewIframe(htmlFile, iframeStyleObject);\r\n            setUpNewIframe(friendlyIF);\r\n            checkEmbeds(friendlyIF);\r\n            startTriviaAnalytics(friendlyIF);\r\n            slider(friendlyIF);\r\n        } else { // elseonce page has finished loading, so as not to slowdown the page load at all\r\n            document.onreadystatechange = function () {\r\n                if (firstWidgetRun == true && (document.readyState == \"complete\" || document.readyState == \"interactive\")) {\r\n                    firstWidgetRun = false;\r\n                    friendlyIF = createNewIframe(htmlFile, iframeStyleObject);\r\n                    setUpNewIframe(friendlyIF);\r\n                    checkEmbeds(friendlyIF);\r\n                    startTriviaAnalytics(friendlyIF);\r\n                    slider(friendlyIF);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //#2\r\n    function createNewIframe(htmlFile, object) {\r\n        // log('#2 createNewIframe');\r\n        // console.log('iframe insert html');\r\n        // console.log('iframe styles', object);\r\n        //create friendly iframe to place ourselves inside\r\n        var iframe = document.createElement('iframe');\r\n        for (var obj in object) {\r\n            switch (obj) {\r\n            case 'style':\r\n                for (var style in object[obj]) {\r\n                    iframe[obj][style] = object[obj][style];\r\n                }\r\n                break;\r\n            default:\r\n                iframe[obj] = object[obj];\r\n                break;\r\n            }\r\n        }\r\n\r\n        currentScript.parentNode.insertBefore(iframe, currentScript);\r\n\r\n        //create inline html for friendlyIframe\r\n        if (htmlFile) {\r\n            iframe.contentWindow.document.open();\r\n            iframe.contentWindow.document.write(htmlFile);\r\n            iframe.contentWindow.document.close();\r\n        } else {\r\n            console.warn('No Html Available for friendly iframe');\r\n        }\r\n        return iframe;\r\n    }\r\n\r\n    //#3\r\n    function setUpNewIframe(iframe) {\r\n        // log('#3 setUpNewIframe');\r\n        // console.log(iframe);\r\n        var friendlyIFdocument = iframe.contentWindow.document;\r\n        if (friendlyIFdocument.readyState == \"complete\" || friendlyIFdocument.readyState == \"interactive\") { // if page is already loaded'\r\n            getIframeQuery(iframe);\r\n            setIframeStyle(iframe, query);\r\n            //after you get the query you set the environment\r\n            setupEnvironment(query);\r\n        } else { // elseonce page has finished loading, so as not to slowdown the page load at all\r\n            friendlyIFdocument.onreadystatechange = function () {\r\n                if (friendlyIFdocument.readyState == \"complete\" || friendlyIFdocument.readyState == \"interactive\") {\r\n                    getIframeQuery(iframe);\r\n                    setIframeStyle(iframe, query);\r\n                    //after you get the query you set the environment\r\n                    setupEnvironment(query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //#4\r\n    function getIframeQuery(iframe) {\r\n        // log('#4 getIframeQuery');\r\n        try {\r\n            var srcQuery = iframe.name.split(\"js?\")[1];\r\n            //determine if a query string is after the index.html location || if query is after a javascript location\r\n            if (srcQuery != \"\" && srcQuery != null) {\r\n                try {\r\n                    query = JSON.parse(decodeURIComponent(srcQuery).replace(/'/g, '\"'));\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            } else {\r\n                query = JSON.parse(decodeURIComponent(document.location.search.substr(1)));\r\n            }\r\n        } catch (e) {\r\n            console.log('query error', e);\r\n            query = {};\r\n        }\r\n        // console.log('query', query);\r\n    }\r\n\r\n    //#5\r\n    function setIframeStyle(iframe, query) {\r\n        // log('#5 setIframeStyle');\r\n        // console.log('setIframeStyle =>', iframe);\r\n        var friendlyIFdocument = iframe.contentWindow.document;\r\n\r\n        //create inline style for friendlyIframe\r\n        var style = friendlyIFdocument.createElement(\"style\");\r\n        if (query.wide != null && query.wide != '') {\r\n\r\n            //to see if the parent node is an igloo div that was created by igloo\r\n            if (iframe.parentNode.getAttribute('igloo_id')) {\r\n                iframe.parentNode.style.width = \"100%\"; // CHANGE PARENT DIV which is igloo div to have 100% width\r\n                iframe.parentNode.style.maxWidth = \"992px\"; // By Design max width will be 992px\r\n            }\r\n\r\n            //set iframe width to be 100% width to be responsive\r\n            iframe.width = \"100%\";\r\n            iframe.height = \"250\";\r\n\r\n            //CREATE LISTENER FOR RESIZE\r\n            window.addEventListener('resize', function () {\r\n                //set iframe to width of parent node\r\n                iframe.width = iframe.parentNode.clientWidth;\r\n            }, true);\r\n\r\n            style.appendChild(friendlyIFdocument.createTextNode(cssFile));\r\n        } else {\r\n            style.appendChild(friendlyIFdocument.createTextNode(cssFile));\r\n        }\r\n\r\n        //append the css file into iframe head\r\n        friendlyIFdocument.head.appendChild(style);\r\n\r\n        //create variable to be used similar to jquery for id's\r\n        $ = function (e) { // create a simple version for grabbing id's of elements\r\n            return friendlyIFdocument.getElementById(e)\r\n        };\r\n\r\n    }\r\n\r\n    //#6\r\n    function setupEnvironment(widgetQuery) { //runs once per embed\r\n        // log('#6 setupEnvironment');\r\n        query = widgetQuery;\r\n        var cat = widgetQuery.category;\r\n        var group = widgetQuery.group == '' ? widgetQuery.group = null : widgetQuery.group;\r\n        var dom = widgetQuery.dom == '' ? widgetQuery.dom = null : widgetQuery.dom;\r\n        var environment = getDomain(friendlyIF.name.split('.')[0]);\r\n        var env;\r\n\r\n        if (widgetQuery.env != null) {\r\n            env = widgetQuery.env && widgetQuery != 'prod-' ? widgetQuery.env : 'prod-';\r\n        } else {\r\n            env = getEnv(environment);\r\n        }\r\n\r\n        //setup Image Environment api\r\n        apiCallUrl = dwApi;\r\n        //if group does exist here then add group query parameter otherwise add categeory parameter for api\r\n        if (widgetQuery.group != null && widgetQuery.group != \"\") {\r\n            apiCallUrl += \"?group=\" + group;\r\n        } else {\r\n            subCategory = widgetQuery.category;\r\n            apiCallUrl += \"?cat=\" + cat;\r\n        }\r\n        if (widgetQuery.group == 'weather' || widgetQuery.category == 'weather') {\r\n            waldo = protocolToUse + env + waldo;\r\n            wheresWaldo();\r\n            apiCallUrl += '&location=' + getLocation[0].state.toLowerCase() + '&loc_type=state';\r\n        }\r\n        if (dom != null && dom != \"\" && (widgetQuery.group != 'weather' && widgetQuery.category != 'weather')) {\r\n            apiCallUrl += \"&partner=\" + dom;\r\n        }\r\n        //FALL BACK API SET HERE INCASE Dynamic widget api fails to make a call\r\n        apiCallUrl = protocolToUse + env + apiCallUrl;\r\n        postUrl = protocolToUse + env + postUrl;\r\n        fallBackApi = protocolToUse + env + dwApi + \"?group=sports\";\r\n        imageUrl = protocolToUse + env + imageUrl; // this is global call that is used for images\r\n        // console.log(apiCallUrl);\r\n        // console.log(postUrl);\r\n        // console.log(fallBackApi);\r\n        // console.log(imageUrl);\r\n        // console.log('waldo', getLocation);\r\n    }\r\n\r\n    //#6-1\r\n    function wheresWaldo() {\r\n        // log('#6-1 Where's Waldo?');\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.onreadystatechange = function () {\r\n\r\n            if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\r\n                //On complete function\r\n                getLocation = JSON.parse(xmlHttp.responseText);\r\n            }\r\n        }\r\n        xmlHttp.open(\"GET\", waldo, false); // false for synchronous request\r\n        xmlHttp.send(null);\r\n    }\r\n\r\n    //#7\r\n    function checkEmbeds(element) {\r\n        // log('#7 checkEmbeds');\r\n        var widgetContainers = window.document.getElementsByClassName(IfClassName);\r\n        if (widgetContainers) {\r\n            total_embeds = widgetContainers.length;\r\n            element.id = !element.id && element.id != '' ? element.id : 'slider_id_' + total_embeds;\r\n        } else {\r\n            console.warn('No widget containers found');\r\n        }\r\n        // console.log('total_embeds', total_embeds);\r\n        // console.log('element.id', element.id);\r\n    }\r\n\r\n    //#8\r\n    slider = function (element) {\r\n        // log('#8 slider');\r\n        //inject HTML and CSS structure\r\n        var html =\r\n            \"<div class='wrapper'><div class='pointer' id='pointer_\" + total_embeds + \"'><div class='icon swipe_right'>\" + svgIcon +\r\n            \"</div></div><div class='slider' id='slider_\" + total_embeds + \"'></div>\" +\r\n            \"<div class='slider_ad_zone fade_in_out'><div class='slider_background'><div class='ad_progress_fill'>\" +\r\n            \"</div><div class='ad_progress_bar'></div></div></div></div>\";\r\n\r\n        // var apiCallUrl = protocolToUse + query.env.replace(\"prod-\", \"\") + 'dw.synapsys.us/list_api.php';\r\n        // console.log(element);\r\n        var sliderWindow = element.contentWindow;\r\n        var sliderDocument = element.contentWindow.document;\r\n        // console.log(sliderDocument);\r\n        var pointer; //When content is defined set the swipe indicator\r\n        var slider; //When content is defined set this variable to Container for where sliding blocks are inputed into\r\n\r\n        var sliderBlocks = sliderDocument.getElementsByClassName('slider_block'); // an array of all the blocks in our slider\r\n        var scrollIncrements = 0; // how much to increase the scroll by in this interpolation loop?\r\n        var rand; // list random ID\r\n        // var firstAd; // the div for the actual igloo stack to live in, that gets moved around as you scroll\r\n        var currentPub; // the current color scheme and fallback imageset to use\r\n        var lazyLoaded = false; // are the images after the first one loaded in yet?\r\n        var currentListId = \"\"; // an ID to send to yeti for the current list\r\n        var widgetZone = element.parentElement.getElementsByClassName(\"widget_zone\")[0];\r\n        var widgetLoaded = false;\r\n        var listCount = 0; //keeps count of number of items in a list and aggregates as more lists are loaded\r\n        //Variables for slider functionality\r\n        var startCord = {'x': -1}, //X Coordinate on touchstart or mousedown\r\n            endCord = {'x': -1}, //X Coordinate on touchend or mouseup\r\n            direction = '', //Swiped Direction\r\n            minDistanceX = 10, //Min distance on X axis\r\n            minTime = 100, //Max allowed time between swipe start and end\r\n            startTime = 0, //Time on swiped start\r\n            elapsedTime = 0, //Elapsed time between swiped start and end\r\n            targetEl = sliderDocument.getElementsByClassName('slider'), //Target element\r\n            scrollCounter = 0, //Incremental counter to keep track of list position\r\n            initialLoad = true, //Determines initial load so that new event listeners are not added\r\n            scrollRight = false, //Scroll direction\r\n            scrollLeft = false, //Scroll direction\r\n            initialTile = 220, //Initial tile width to scroll\r\n            appendedTile = 246, //Tile width to scroll plus padding\r\n            adCounter = 0, //Counter for displaying ad\r\n            initialAdRun = false; //flag so that ad will not repeat once initialized\r\n        widgetZone.style.display = 'none';\r\n\r\n        element.classList.add(\"slider_\" + query.category);\r\n\r\n        function getPublisher(pub) {\r\n            // console.log('getPublisher', pub);\r\n            var pubs = {\r\n                mlb: {\r\n                    hex: \"#bc2027\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/baseball_stock.jpg\"\r\n                },\r\n                nfl: {\r\n                    hex: \"#004e87\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/07/football_stock_01_970x250.jpg\"\r\n                },\r\n                ncaaf: {\r\n                    hex: \"#004e87\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/07/football_stock_01_970x250.jpg\"\r\n                },\r\n                nba: {\r\n                    hex: \"#f26f26\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/basketball_stock.jpg\"\r\n                },\r\n                college_basketball: {\r\n                    hex: \"#f26f26\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/basketball_stock.jpg\"\r\n                },\r\n                finance: {\r\n                    hex: \"#3098ff\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/finance_stock.jpg\"\r\n                },\r\n                weather: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/weather_stock.jpg\"\r\n                },\r\n                crime: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/real_estate_stock.jpg\"\r\n                },\r\n                demographics: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/real_estate_stock.jpg\"\r\n                },\r\n                politics: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/real_estate_stock.jpg\"\r\n                },\r\n                disaster: {\r\n                    hex: \"#43B149\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/03/real_estate_stock.jpg\"\r\n                },\r\n                celebrities: {\r\n                    hex: \"#6459d3\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/04/actor.jpg\"\r\n                },\r\n                music: {\r\n                    hex: \"#6459d3\",\r\n                    fallbackImage: \"images.synapsys.us/01/fallback/stock/2017/04/musician.jpg\"\r\n                }\r\n            };\r\n            if (pub == null || pub == \"\" || !pubs[pub]) {\r\n                return pubs[\"finance\"];\r\n            } else {\r\n                return pubs[pub];\r\n            }\r\n        }\r\n\r\n        /***************************** runAPI ***************************\r\n         * @function runAPI\r\n         * function that makes an asynchronous request using http and setting a global variable equal to the response of the text.\r\n         * fail safe of retrying 10 times before sending error message\r\n         *\r\n         * @param function apiUrl -\r\n         */\r\n        //#9\r\n        function loadData(apiUrl, loadMore, newCount) { //Make it to where it is easy to be reused by anyone\r\n            if (typeof loadMore == 'undefined') {\r\n                loadMore = false;\r\n            }\r\n            if (typeof newCount == 'undefined') {\r\n                newCount = 0;\r\n            }\r\n            // log('#9 loadData');\r\n            //variable that stores the response of an http request\r\n            if (sliderWindow.XMLHttpRequest) {\r\n                var xhttp = new XMLHttpRequest();\r\n            } else {\r\n                var xhttp = new ActiveXObject('Microsoft.XMLHTTP')\r\n            }\r\n            xhttp.onreadystatechange = function () {\r\n                // Check if the loading status of the current document is done\r\n                if (this.readyState == 4) {\r\n                    if (this.status == 200) {\r\n                        // On success parse out the response\r\n                        widgetData = JSON.parse(this.responseText);\r\n                        // console.log(widgetData);\r\n                        var dataArray = widgetData.l_data != null ? widgetData.l_data : widgetData.data.listData;\r\n                        //set maximum index of returned dataLayer\r\n                        if (dataArray.length >= 25) {\r\n                            currentIndex = 24;\r\n                            maxIndex = 25;\r\n                        } else {\r\n                            currentIndex = dataArray.length - 1;\r\n                            maxIndex = dataArray.length;\r\n                        }\r\n                        currentPub = getPublisher(widgetData.category);\r\n                        //aggregates the number of items in a list\r\n                        listCount = newCount + dataArray.length;\r\n                        //Once Data from Api returns then populate slider\r\n                        populateslider(widgetData, loadMore);\r\n                    } else {\r\n                        // Error handling\r\n                        // Get the message\r\n                        var msg = this.statusText;\r\n                        if (this.status == 500) {\r\n                            try {\r\n                                msg = JSON.parse(this.responseText).message\r\n                            } catch (e) {\r\n                                console.log('No JSON message')\r\n                            }\r\n                        }\r\n                        msg = 'HTTP Error (' + this.status + '): ' + msg;\r\n                        if (tries > (maxTries - 2)) {\r\n                            console.warn(msg + \" | hiding widget container | => SWAPPING TO FALLBACK\");\r\n                            apiUrl = fallBackApi + \"&rand=1\";\r\n                            apiCallUrl = fallBackApi;\r\n                        }\r\n                        if (tries++ > maxTries) { // IF WIDGET FAILS THEN HIDE THE ENTIRE CONTAINER\r\n                            sliderDocument.getElementsByClassName('e_container')[0].style.display = 'none';\r\n                            throw msg + \" | hiding widget fallback failed container | => PLEASE CONTACT YOUR PROVIDER\";\r\n                        }\r\n                        setTimeout(loadData(apiUrl), 500)\r\n                    }\r\n                }\r\n            };\r\n            xhttp.open(\"GET\", apiUrl, true);\r\n            xhttp.send();\r\n        }\r\n\r\n        /************************** runAPI END ************************/\r\n\r\n        function displayAd() {\r\n            var sliderContainer = sliderDocument.getElementsByClassName('slider_background')[0];\r\n            var sliderAdZone = sliderDocument.getElementsByClassName('slider_ad_zone fade_in_out')[0];\r\n            if (!widgetLoaded) {\r\n                sliderContainer.appendChild(widgetZone);\r\n                widgetLoaded = true;\r\n            }\r\n            widgetZone.style.display = 'block';\r\n            widgetZone.style.opacity = 1;\r\n            widgetZone.style.zIndex = 50;\r\n            sliderAdZone.style.display = 'block';\r\n            var adProgressCounter = 1,\r\n                adIntervalSeconds = 10,\r\n                adIntervalMilliSeconds = 1000;\r\n            var adIntervalTimer = setInterval(function () {\r\n                adProgressCounter++;\r\n                var progressBar = sliderDocument.getElementsByClassName('ad_progress_bar')[0];\r\n                progressBar.style.width = (adProgressCounter * 3.334) + '%';\r\n                if (adProgressCounter >= 31) {\r\n                    adProgressCounter = 1;\r\n                    progressBar.style.width = 0;\r\n                    clearInterval(adIntervalTimer);\r\n                    sliderAdZone.style.display = 'none';\r\n                }\r\n            }, adIntervalMilliSeconds / adIntervalSeconds);\r\n        }\r\n\r\n        function setCursorIcon() {\r\n            var iconUrl;\r\n            var sliderDomain = getDomain(friendlyIF.name);\r\n            // For local use only\r\n            // iconUrl = protocolToUse + sliderDomain + \"/slider/cursors/swipe-icon.svg\";\r\n            iconUrl = protocolToUse + getEnv(sliderDomain.split('.')[0]) + \"w1.\" + sliderDomain + \"/widgets/slider/cursors/swipe-icon.svg\";\r\n            sliderDocument.getElementsByClassName('wrapper')[0].style.cursor = \"url('\" + iconUrl + \"'), move\";\r\n        }\r\n\r\n        //#10\r\n        function populateslider(data, loadMore) {\r\n            // log('#10 populateslider');\r\n            // console.log('populateslider', data);\r\n            var items = data.l_data;\r\n            var title;\r\n            var backStyle;\r\n            var outputHTML = \"\";\r\n            var listWrapper = sliderDocument.createElement('div');\r\n            listWrapper.className = 'list_wrapper';\r\n            listWrapper.setAttribute('list-param', data.l_param);\r\n            listWrapper.setAttribute('category', data.category);\r\n\r\n            //grab a random number for title tile\r\n            var randomNumber = Math.floor(Math.random() * (items.length - 1));\r\n            var randomImage = items[randomNumber].li_img;\r\n\r\n            // CREATE WRAPPER of slider inside of iframe && set global variables. This only needs to run on initial load\r\n            if (!loadMore) {\r\n                sliderDocument.body.innerHTML = html;\r\n                slider = sliderDocument.getElementById('slider_' + total_embeds);\r\n                pointer = sliderDocument.getElementById('pointer_' + total_embeds);\r\n            }\r\n\r\n            //TODO create IMAGE check function\r\n            if (randomImage == null ||\r\n                randomImage == \"\" ||\r\n                randomImage.indexOf(\"no_\") != -1 ||\r\n                randomImage.indexOf(\"no-\") != -1 ||\r\n                randomImage.indexOf('fallback') != -1\r\n            ) {\r\n                randomImage = protocolToUse + currentPub.fallbackImage;\r\n            }\r\n\r\n            items = items.reverse();\r\n            title = data.l_alt_title != null && data.l_alt_title != '' ? data.l_alt_title : data.l_title; // used due to the fact slider is not wide enought to have more than 50 characters for title\r\n\r\n            var titleTile = {\r\n                hex: currentPub.hex,\r\n                image: randomImage,\r\n                title: title,\r\n                icon: svgIcon\r\n            };\r\n            outputHTML = createTitleTile(titleTile);\r\n\r\n            for (var i = 0; i < items.length && i < items.length; i++) {\r\n                if (items[i].li_value) {\r\n                    items[i].li_value = items[i].li_value.replace(items[i].li_tag, \"\");\r\n                }\r\n                var style = \"\";\r\n                var image_class = \"\";\r\n                var image = items[i].li_img.replace(\"'\", \"\");\r\n                //image check\r\n\r\n                if (items[i].player_wide_img != null && items[i].player_wide_img != \"\") {\r\n                  image = imageUrl + items[i].player_wide_img;\r\n                } else if ((items[i].player_wide_img == null || items[i].player_wide_img == \"\") && (items[i].team_wide_img != null && items[i].team_wide_img != \"\")) {\r\n                  image = imageUrl + items[i].team_wide_img;\r\n                } else {\r\n                  image = items[i].li_img;\r\n                }\r\n\r\n                if (data.category == \"weather\" || image == null || image == \"\" || image.indexOf(\"no_\") != -1 || image.indexOf(\"no-\") != -1 || image.indexOf(\"fallback\") != -1 || image === \"//images.synapsys.us\") {\r\n                    style = \"width: auto; height:100%; top: 0; left: 50%; transform: translateY(0); transform: translateX(-50%);\";\r\n                    image_class = \"fallback\";\r\n                    if (data.category != \"music\") {\r\n                        image = protocolToUse + currentPub.fallbackImage;\r\n                    }\r\n                }\r\n                // background style\r\n                if (data.category == \"finance\") {\r\n                    backStyle = \"style='background-image:url('\" + image + \"?width=200\" + \"')\";\r\n                } else {\r\n                    backStyle = \"style='background-color: \"+currentPub.hex+\";'\";\r\n                }\r\n\r\n                if (items[i].data_point_2 == null) {\r\n                    items[i].data_point_2 = \"\";\r\n                }\r\n                if (items[i].data_value_2 == null) {\r\n                    items[i].data_value_2 = \"\";\r\n                }\r\n\r\n                // TODO REWORK BELOW to use category from data instead of embed since we don't have group as a valid category to use\r\n                // if using new api on certain categories then use new format\r\n                var sliderData = {};\r\n                if (data.category == \"celebrities\" || data.category == \"weather\" || data.category == \"music\" || data.category == \"nfl\" || data.category == \"ncaaf\") {\r\n                    if (items[i].data_point_2 == null) {\r\n                        items[i].data_point_2 = \"\";\r\n                    }\r\n                    if (items[i].data_value_2 == null) {\r\n                        items[i].data_value_2 = \"\";\r\n                    }\r\n                    sliderData = {\r\n                        hex: currentPub.hex,\r\n                        style: style,\r\n                        img_class: image_class,\r\n                        img_background: backStyle,\r\n                        image: image,\r\n                        value: items[i].data_value_2,\r\n                        tag: items[i].data_point_2,\r\n                        title: items[i].li_title,\r\n                        sub_txt: items[i].li_sub_txt,\r\n                        rank: items[i].li_rank\r\n                    };\r\n                } else {\r\n                    sliderData = {\r\n                        hex: currentPub.hex,\r\n                        style: style,\r\n                        img_class: image_class,\r\n                        img_background: backStyle,\r\n                        image: image,\r\n                        value: items[i].li_value,\r\n                        tag: items[i].li_tag,\r\n                        title: items[i].li_title,\r\n                        sub_txt: items[i].li_sub_txt,\r\n                        rank: items[i].li_rank\r\n                    };\r\n                }\r\n                if(sliderData.tag === \"\"){\r\n                  outputHTML += createDataTile('type2', sliderData);\r\n                }else{\r\n                  outputHTML += createDataTile('type1', sliderData);\r\n                }\r\n            }\r\n\r\n            //put slider blocks into listWrapper with data attr\r\n            listWrapper.innerHTML += outputHTML;\r\n\r\n            //once list wrapper is created and finished put it inside of slider Div for swipe feature\r\n            slider.innerHTML += listWrapper.outerHTML;\r\n\r\n            //check in-view attribute after list has populated\r\n            checkListView();\r\n            setCursorIcon();\r\n            viewDwell.startTime();\r\n\r\n            createSliderListeners(); // create listeners of content when content has been populated\r\n        } //TODO END OF FUNCTION populateslider make this function into seperate functions that returns what is neccessary for it is modular\r\n\r\n        //Adds new list when the user scrolls far enough\r\n        function appendNewList(appendCount) {\r\n            // log('NEXT LIST', payloadStyles);\r\n            lazyLoaded = false;\r\n            listRand++;\r\n            var sliderApi = apiCallUrl + \"&rand=\"+ listRand;\r\n            loadData(sliderApi, true, appendCount);\r\n        }\r\n\r\n        //#10-1\r\n        function createTitleTile(titleData) {\r\n            // log('#10-1 createTitleTile', payloadStyles);\r\n            var sliderBlock = sliderDocument.createElement('div');\r\n            sliderBlock.className = 'slider_block';\r\n            var titleOutput;\r\n            try {\r\n                tileOutput =\r\n                    \"<div class='title_overlay' >\" +\r\n                    \"<div class='title_image_div overlay' style='background-color: \" + titleData.hex + \"'>\" +\r\n                    \"<img class='title_image' src=\" + titleData.image + \"?width=200\" + \"/>\" +\r\n                    \"</div>\" +\r\n                    \"<div class='title'>\" + titleData.title + \"</div>\" +\r\n                    \"<div class='instructions_container'>\" +\r\n                    \"<div class='instructions_icon'>\" + titleData.icon + \"</div>\" +\r\n                    \"<div class='instructions_text'>Swipe to progress through the list</div>\" +\r\n                    \"</div>\" +\r\n                    \"</div>\";\r\n            } catch (e) {\r\n                titleOutput = \"\";\r\n                console.error(e);\r\n            }\r\n\r\n            sliderBlock.innerHTML = tileOutput;\r\n\r\n            return sliderBlock.outerHTML;\r\n        }\r\n\r\n        //#10-2\r\n        function createDataTile(type, tileData) {\r\n            // log('#10-2 createTileType', payloadStyles);\r\n            var sliderBlock = sliderDocument.createElement('div');\r\n            sliderBlock.className = 'slider_block';\r\n            var tileOutput;\r\n            try {\r\n                switch (type) {\r\n                case 'type1':\r\n                    tileOutput =\r\n                        \"<div class='list_item'>\" +\r\n                        \"<div class='profile_image_div \" + tileData.img_class + \"' \" + tileData.img_background + \">\" +\r\n                        \"<div class='num' style='border-color:\" + tileData.hex + \"'>\" +\r\n                        \"<div class='num_text'>#<b>\" + tileData.rank + \"</b></div>\" +\r\n                        \"</div>\" +\r\n                        \"<img class='profile_image' onmousedown='if (event.preventDefault) event.preventDefault()' src=\" + tileData.image + \"?width=230\" + \" style='\" + tileData.style + \"'>\" +\r\n                        \"</div>\" +\r\n                        \"<div class='info'>\" +\r\n                        \"<div class='info_container'>\" +\r\n                        \"<div class='name'>\" + tileData.title + \"</div>\" +\r\n                        \"<div class='value bold'>\" + tileData.value + \"</div>\" +\r\n                        \"<div class='stat_type'>\" + tileData.tag + \"</div>\" +\r\n                        \"</div>\" +\r\n                        \"</div>\" +\r\n                        \"</div>\";\r\n                    break;\r\n                case 'type2':\r\n                    tileOutput =\r\n                        \"<div class='list_item'>\" +\r\n                        \"<div class='profile_image_div \" + tileData.img_class + \"' \" + tileData.img_background + \">\" +\r\n                        \"<div class='num' style='border-color:\" + tileData.hex + \"'>\" +\r\n                        \"<div class='num_text'>#<b>\" + tileData.rank + \"</b></div>\" +\r\n                        \"</div>\" +\r\n                        \"<img class='profile_image' onmousedown='if (event.preventDefault) event.preventDefault()' src=\" + tileData.image + \"?width=230\" + \" style='\" + tileData.style + \"'>\" +\r\n                        \"</div>\" +\r\n                        \"<div class='info'>\" +\r\n                        \"<div class='info_container'>\" +\r\n                        \"<div class='value'>\" + tileData.title + \"</div>\" +\r\n                        \"<div class='stat_type'>\" + tileData.value + \"</div>\" +\r\n                        \"</div>\" +\r\n                        \"</div>\" +\r\n                        \"</div>\";\r\n                    break;\r\n                default:\r\n                    break;\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n\r\n            sliderBlock.innerHTML = tileOutput;\r\n\r\n            return sliderBlock.outerHTML;\r\n        }\r\n\r\n        //#11\r\n        function createSliderListeners() {\r\n            // log('#11 createSliderListeners');\r\n            //initial event listeners declaration\r\n            function scrollStart(e) {\r\n                e = e ? e : friendlyIF.event; //check element and fallback to friendlyIF event\r\n                e = ('changedTouches' in e) ? e.changedTouches[0] : e; //Check for changedTouches in element (touch events only); if exists use clientX else use mouse element\r\n                startCord = {'x': e.pageX}; // Start Coordinates on x axis on mousedown or touchstart\r\n                startTime = new Date().getTime(); //Set start time\r\n            }\r\n\r\n            function scrollMove(e) {\r\n                e = e ? e : friendlyIF.event; //Check element and fallback to friendlyIF event\r\n                e.preventDefault(); //Cancels any default action on element\r\n            }\r\n\r\n            function scrollEnd(e) {\r\n                var sliderScroll = scrollIncrements;\r\n                e = e ? e : friendlyIF.event; //check element and fallback to friendlyIF event\r\n                e = ('changedTouches' in e) ? e.changedTouches[0] : e; //Check for changedTouches in element (touch events only); if exists use clientX else use mouse element\r\n                endCord = {'x': e.pageX - startCord.x}; //End coordinates on mouseup or touchend\r\n                elapsedTime = new Date().getTime() - startTime; //Get elapsed time\r\n                if (elapsedTime >= minTime) { //Check if user interacted for more than 100ms\r\n                    direction = (endCord.x < 0) ? 'left' : 'right'; //Set direction\r\n                    if (Math.abs(endCord.x) >= minDistanceX) { //Ensure that the user scrolled at lease 10px left or right\r\n                        switch (direction) {\r\n                            case 'left':\r\n                                scrollIncrements = scrollCounter === 0 ? sliderScroll + initialTile : sliderScroll + appendedTile; //advance\r\n                                scrollLeft = true;\r\n                                slider.style.right = scrollIncrements + 'px';\r\n                                scrollCounter++;\r\n                                adCounter++;\r\n                                if (scrollCounter > 0) {\r\n                                    pointerAnimation(false);\r\n                                }\r\n                                break;\r\n                            case 'right':\r\n                                if (scrollCounter !== 0) {\r\n                                    scrollCounter--;\r\n                                    adCounter--;\r\n                                    scrollIncrements = scrollCounter === 0 ? sliderScroll + (-initialTile) : sliderScroll + (-appendedTile); //advance\r\n                                    scrollRight = true;\r\n                                    slider.style.right = scrollIncrements + 'px';\r\n                                    if (scrollCounter === 0) {\r\n                                        pointerAnimation(true)\r\n                                    }\r\n                                    break;\r\n                                }\r\n                        }\r\n                    } else { //fallback to advance tile if the user scroll is less than 10px\r\n                        scrollIncrements = scrollCounter === 0 ? sliderScroll + initialTile : sliderScroll + appendedTile; //advance\r\n                        scrollLeft = true;\r\n                        slider.style.right = scrollIncrements + 'px';\r\n                        scrollCounter++;\r\n                        adCounter++;\r\n                        if (scrollCounter > 0) {\r\n                            pointerAnimation(false);\r\n                        }\r\n                    }\r\n\r\n                    if (query.event) { // if we are in igloo v3 or >\r\n                            // send the list identifiers to yeti analytics\r\n                            query.event.event = \"widget-list\";\r\n                            query.event.l = currentListId;\r\n                            sendPostMessageToIgloo({\r\n                                action: 'snt_tracker',\r\n                                snt_data: query.event\r\n                            }, 10);\r\n                    }\r\n                    //display ad after every third increment of list in one direction\r\n                    if (!initialLoad || adCounter === 4) {\r\n                        if (adCounter === 4 && !initialAdRun) {\r\n                            displayAd();\r\n                            initialAdRun = true;\r\n                        } else if (initialAdRun && (adCounter === 0 || adCounter === 8)) {\r\n                            displayAd();\r\n                            adCounter = 0;\r\n                            initialAdRun = false;\r\n                        } else if (adCounter === -4) { //Needed in the event the adCounter is set to 0 and the user scrolls left\r\n                            displayAd();\r\n                            adCounter = 0;\r\n                            initialAdRun = false;\r\n                        }\r\n                    }\r\n\r\n                    //append new list when scrollCounter is 5 less than list length\r\n                    if (scrollCounter === (sliderBlocks.length - 5)) {\r\n                        appendNewList(scrollCounter);\r\n                    }\r\n                }\r\n            }\r\n\r\n            function addListeners(el, userEv, fn) { //Function to set listeners\r\n                var events = userEv.split(' '); //Split mouse/touch events\r\n                for (var i = 0, length = events.length; i < length; i++) {\r\n                    el.addEventListener(events[i], fn, false);\r\n                }\r\n            }\r\n\r\n            //turns on/off pointer animation on 1st tile\r\n            function pointerAnimation(animate) {\r\n                if (!animate) {\r\n                    pointer.style.opacity = '0';\r\n                    slider.classList.add(\"stopAnim\");\r\n                } else {\r\n                    slider.classList.remove(\"stopAnim\");\r\n                    pointer.style.opacity = '1';\r\n                }\r\n            }\r\n\r\n            //check to see if there are 5 tiles remaining\r\n            if (initialLoad) {\r\n                addListeners(targetEl[0], 'mousedown touchstart', scrollStart);\r\n                addListeners(targetEl[0], 'mousemove touchmove', scrollMove);\r\n                addListeners(targetEl[0], 'mouseup touchend', scrollEnd);\r\n                initialLoad = false;\r\n            }\r\n\r\n        }// END createSliderListeners\r\n\r\n        //TODO make more modular\r\n        function checkListView() {\r\n\r\n              setTimeout(function(){\r\n                var l_wrappers = sliderDocument.getElementsByClassName('list_wrapper');\r\n                var padding = 30;\r\n                var percent = 0.5;\r\n                for (var i = 0; i < l_wrappers.length; i++) {\r\n                  //iframe width on screen\r\n                  var iWidth = element.offsetWidth;\r\n                  //wrapper width on screen\r\n                  var wLeft = l_wrappers[i].getBoundingClientRect().left;\r\n\r\n                  //wrapper width on screen\r\n                  var wWidth = l_wrappers[i].clientWidth;\r\n\r\n                  var listPadding = ((l_wrappers.length - (i-1)) * iWidth);\r\n                  var elementChecked = wWidth-padding+ wLeft;\r\n                  if(percent){\r\n                    if( (elementChecked / iWidth) > percent && (elementChecked - listPadding) < wWidth){\r\n                      l_wrappers[i].setAttribute('in-view', true);\r\n                    }else{\r\n                      l_wrappers[i].setAttribute('in-view', false);\r\n                    }\r\n                  }else{\r\n                    if (elementChecked < 0 || elementChecked > wWidth ) {\r\n                      l_wrappers[i].setAttribute('in-view', false);\r\n                    }else{\r\n                      l_wrappers[i].setAttribute('in-view', true);\r\n                    }\r\n                  }\r\n                }\r\n              }, 700);// about 100ms after the animation ends on slider\r\n        }\r\n\r\n\r\n        //slider function STARTS HERE loadData()\r\n        var sliderApi = apiCallUrl + \"&rand=\"+ listRand;\r\n        loadData(sliderApi);\r\n    };\r\n\r\n    /*\r\n     ****************************************************************************************************************************************\r\n     ***********************ANALYTICS VARIABLES *********************************************************************************************\r\n     ****************************************************************************************************************************************\r\n     */\r\n\r\n    //global variables used for payload\r\n    var storeSessionFn = {\r\n        get: function () {\r\n            if (sessionStorage.getItem('snt_analytics') === null) {\r\n                storeSession = sessionStorage.setItem('snt_analytics', JSON.stringify({\r\n                    before_time: null,\r\n                    after_time: null,\r\n                    session_id: null\r\n                }));\r\n            }\r\n            storeSession = JSON.parse(sessionStorage.getItem('snt_analytics'));\r\n            return storeSession;\r\n\r\n        },\r\n        set: function (jsonData) {\r\n            sessionStorage.setItem('snt_analytics', JSON.stringify(jsonData));\r\n        }\r\n    }; //storeSessionFn\r\n    var widgetEngaged = false;\r\n    var contentAnalyzed;\r\n    var timeToLive = 600000;\r\n    var payloadFail = 0;\r\n    var sessionId,\r\n        partnerId,\r\n        placementId,\r\n        viewEngaged = false;\r\n\r\n    var viewDwell, // view_dwell, Each time a quiz is 50%+ in view for any length of time. (collected every 100ms)\r\n        embedTime, // engage_dwell, When CU is engaged*, each time a question is 50%+ in view for any length of time. (collected every 100ms)\r\n        sessionTimer, // create Session Timer to know when the session has ended and create a new payload;\r\n        payloadTimer, // create Payload Timer to know when to auto send payloads if variables are met;\r\n        engageDwell, // time from the moment the widget is in view and engaged\r\n        dwellLimitTimer,\r\n        isActiveTimer = 0,\r\n        windowActiveTimer; // time limiter for dwell so dwell timer can be stopped after a certain time limit\r\n\r\n    var storeSession;\r\n    var sessionBefore = 0;\r\n    var sessionAfter = 0;\r\n\r\n    var igloo,\r\n        windowActive = true,\r\n        userAgentObj,\r\n        category,\r\n        embed_view = 0, //Each time an embed is 50%+ in view for 1+ seconds. This is recorded only once per embed load.\r\n        content_title = '',\r\n        total_clicks = 0,\r\n        list_view = 0,\r\n        bounce = 0, //should only ever be 1, never more than due to submission on a payload level.  || always return 1 until questions is answered then return 0 which zero means it is no longer in z since it has been answered\r\n        total_embeds; // Record total amount of embeds on a page no matter if in view or not\r\n\r\n    var view = false;\r\n    var oneSecMRC = 0; //MRC standard that content must be atleast 1 sec in view before be considered to be actually viewed\r\n    var oneSecMRCcheck = false;\r\n\r\n\r\n    function startTriviaAnalytics(element) {\r\n        // log('TRIVIA ANALYTICS START', payloadStyles);\r\n        contentAnalyzed = element;\r\n        resetAnalytics();\r\n\r\n        userAgentObj = iglooAnalytics(contentAnalyzed, 'useragent');\r\n\r\n        // if igloo utilities then iglooAnalytics() function will return boolean true if igloo is 50% or more in view of use window\r\n        view = iglooAnalytics(contentAnalyzed, 'view'); // check initial load if widget is available\r\n        //TODO COMBINE TIMERS TO GET A MORE ACCURATE TIME INTERVAL REPORTING\r\n        analyticsSession(); // get session ID first\r\n        analyticsWindowFocus();\r\n        analyticsDwellEngagement();\r\n        analyticsViewScroll(contentAnalyzed);\r\n    };\r\n\r\n    /** igloo.utils.elementIsVisible(element, debug_div, igloo_debug, min_percent)\r\n     * This function checks if a given element is 60% or more in the viewport\r\n     * @param  {DOMElement}  element     The element to check for visibility\r\n     * @param  {DOMElement}  debug_div   The debugging div to put the % visible in\r\n     * @param  {Boolean}     igloo_debug The debugging state of igloo\r\n     * @param  {Number}      min_percent The minimum percent for an element to be\r\n     *                                   considered in view (default 0.6)\r\n     * @return {Boolean}                 Whether the element is in view\r\n     */\r\n    /** https://github.com/passit/adstack/blob/adstack/prod/src/js/IglooModule.js#L37\r\n     * igloo.browser\r\n     * This object describes the current browser including name, version, mobile,\r\n     * and bot\r\n     * @type {Object}\r\n     * @key  {String}  name    The name of the broswer (Chrome, IE, etc)\r\n     * @key  {String}  version The version of the browser\r\n     * @key  {Boolean} bot     Whether the browser is a bot or not\r\n     * @key  {Boolean} mobile  Whether the browser is mobile or not\r\n     */\r\n    function iglooAnalytics(contentElement, type, percent) {\r\n        if (typeof percent == 'undefined') {\r\n            percent = 0.5; //default 50% visibility\r\n        }\r\n        if (igloo) {\r\n            try {\r\n                switch (type) {\r\n                    case 'view':\r\n                        return igloo.utils.elementIsVisible(contentElement, null, false, percent);\r\n                        break;\r\n                    case 'useragent':\r\n                        return igloo.browser;\r\n                        break;\r\n                    default:\r\n                        console.warn('igloo Utility not found');\r\n                        break;\r\n                }\r\n            } catch (e) {\r\n                console.warn('igloo not found', e);\r\n            }\r\n        }\r\n    }\r\n\r\n    //TODO MUST USE TIMESTAMPS ON CERTAIN TIMERS TO GET A MORE PROPER TIME ANALYTICS;\r\n    /**timer(name, tick, stopAt, debug_element)\r\n     * Function to create a timer with variable features to startTime, pauseTime, get, or even auto pauseTime\r\n     * @type {Object}\r\n     * @key  {String} name    give the timer a name to track\r\n     * @key  {Number} tick    tick is how many times the interval Timer should update the time(ms)\r\n     * @key  {Number} stopAt  if you want the time to auto pauseTime at a certain time(ms)\r\n     * @key  {Object} debug_div  the element (div/span/etc..) you want to debug off of\r\n     * @key  {Object} createFunction runs the function user creates every interval\r\n     */\r\n    function timer(name, tick, stopAt, debug_element, createFunction) {\r\n        this.name = name;\r\n        this.time = 0;\r\n        this.stopAt = stopAt;\r\n        this.timerOn = false;\r\n        this.tick = tick;\r\n        this.intervalTimer = function () {},\r\n            this.startTime = function () {\r\n                if (!this.timerOn) {\r\n                    this.timerOn = true;\r\n                    var cTimer = this;\r\n                    this.intervalTimer = setInterval(function () {\r\n                        cTimer.time += cTimer.tick;\r\n                        if (cTimer.stopAt && cTimer.time >= cTimer.stopAt) {\r\n                            cTimer.pauseTime();\r\n                        }\r\n                        if (debug_element && debug) {\r\n                            debug_element.innerHTML = cTimer.time;\r\n                        }\r\n                        if (createFunction) {\r\n                            createFunction(cTimer);\r\n                        }\r\n                    }, this.tick);\r\n                }\r\n            },\r\n            this.pauseTime = function () {\r\n                clearInterval(this.intervalTimer);\r\n                this.timerOn = false;\r\n            },\r\n            this.resetTime = function () {\r\n                this.time = 0;\r\n            }\r\n    };\r\n\r\n\r\n    //create an iframe for post request that will be removed once the request has been sent\r\n    function createPayloadFrame(jsonObject) {\r\n        //create friendly iframe to place ourselves inside\r\n        var payloadIframe = document.createElement('iframe');\r\n        var payloadIframeWindow;\r\n        var payloadId = \"snt_payload_id_\" + rand_id;\r\n        payloadIframe.setAttribute(\"id\", payloadId);\r\n        payloadIframe.className = \"report\";\r\n        payloadIframe.width = 1;\r\n        payloadIframe.height = 1;\r\n        payloadIframe.scrolling = 'no';\r\n        payloadIframe.style.overflow = 'hidden';\r\n        payloadIframe.src = 'about:blank';\r\n        payloadIframe.style.border = 'none';\r\n\r\n        contentAnalyzed.parentNode.insertBefore(payloadIframe, contentAnalyzed);\r\n\r\n\r\n        payloadIframeWindow = payloadIframe.contentWindow;\r\n\r\n        //create inline html for payloadIframe\r\n        payloadIframeWindow.document.open();\r\n        payloadIframeWindow.document.write('<scr' + 'ipt type=\"text/javascript\">' + sendPayload(postUrl, jsonObject) + ' </scr' + 'ipt>');\r\n        payloadIframeWindow.document.close();\r\n\r\n        // once postMsg sent the remove the iframe\r\n        var reporting = document.getElementById(payloadId);\r\n        if (typeof reporting.remove === 'function') {\r\n            reporting.remove();\r\n        } else {\r\n            reporting.outerHTML = '';\r\n        }\r\n    }\r\n\r\n    function sendPayload(url, jsonObject) {\r\n        // try { TODO re-enable when ready\r\n        //     if (typeof jsonObject == 'object') {\r\n        //         var postXML = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        //         postXML.open(\"POST\", url, true);\r\n        //         postXML.send(JSON.stringify(jsonObject))\r\n        //         // setTimeout(function(){\r\n        //         //   postXML.abort(); // aborts the xhttp and sets readyState to 0 as (UNSENT)\r\n        //         // },200);\r\n        //     }\r\n        // } catch (e) {\r\n        //     console.warn(\"Product Analytics Error in Post Request\", e)\r\n        // }\r\n    }\r\n\r\n\r\n    var jsonInfo = {\r\n        \"bo\": \"bounce - number == should only ever be 1, never more than due to submission on a payload level. 0||1 \", // bounce\r\n        \"cl\": \"clicks - number == amount since last payload CURRENT||RESETS\", //total clicks\r\n        \"eb\": \"total embeds - number == amount since last payload CURRENT\", //total embeds on the page\r\n        \"ed\": \"engage dwell - number == amount since last payload CURRENT||RESETS\", //engaged dwell\r\n        \"ev\": \"embed views - number == should only ever be 1, never more than due to submission on a payload level CURRENT\", // embed views\r\n        \"mo\": \"mobile - boolean 0||1\", //mobile\r\n        \"pa\": \"partner id - number\", //partner id\r\n        \"pl\": \"placement id - string\", //placement id\r\n        \"si\": \"session id - string\", // i need to generate this myself\r\n        \"vd\": \"view dwell - number == amount since last payload CURRENT||RESETS\" //view dwell after engagements\r\n    };\r\n\r\n    function updatePayload(send) {\r\n        if (igloo) {\r\n            if (payloadFail <= 10) {\r\n                try {\r\n                    storeSession = storeSessionFn.get();\r\n                    //TODO TEST VARIABLES\r\n                    var listId = 12314214;\r\n                    if (view && (storeSession['listId'] != listId)) {\r\n                        storeSession['listId'] = listId;\r\n                        storeSessionFn.set(storeSession);\r\n                    }\r\n                    if (oneSecMRCcheck) {\r\n                        embed_view = 1; // if view is true then set it to 1 otherwise keep its current state;\r\n                    }\r\n                    jsonObject = {\r\n                        \"ct\": content_title,\r\n                        \"bo\": bounce, // bounce\r\n                        \"cl\": total_clicks ? total_clicks : 0, //total clicks\r\n                        \"eb\": total_embeds ? total_embeds : 0, //total embeds on the page\r\n                        \"ed\": engageDwell ? engageDwell.time : 0, //engaged dwell\r\n                        \"ev\": embed_view, // embed views\r\n                        \"li\": storeSession['listId'],\r\n                        \"lv\": viewDwell ? viewDwell.time : 0, // TODO talk to backend. this may be just an aggregation on their end of viewDwell based on listID\r\n                        \"mo\": userAgentObj.mobile ? 1 : 0, //mobile\r\n                        \"pa\": query.event.p, //partner id\r\n                        \"pl\": query.event.z && query.event.z != '' ? query.event.z : '0', //placement id\r\n                        \"si\": sessionId, // i need to generate this myself\r\n                        \"vd\": viewDwell ? viewDwell.time : 0, //view dwell\r\n                    };\r\n                    isMobile = jsonObject['mo'];\r\n                    if (send == 'send') {\r\n                        createPayloadFrame(jsonObject);\r\n                        jsonObject = {};\r\n                        resetAnalytics();\r\n                    } else {\r\n                        // for (var obj in jsonObject) {\r\n                        //     log(obj + ':' + jsonObject[obj] + ':\\t\\t' + jsonInfo[obj]);\r\n                        // };\r\n                    }\r\n                } catch (e) {\r\n                    payloadFail++;\r\n                    console.log('%cerror updating payload                                                     ', 'background: linear-gradient(#7a0000, #000000); border: 1px solid #3E0E02; color: white');\r\n                    console.warn(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function analyticsWindowFocus() {\r\n        var focused = true;\r\n\r\n        var hidden = \"hidden\";\r\n\r\n        // Standards:\r\n        if (hidden in document)\r\n            document.addEventListener(\"visibilitychange\", onchange);\r\n        else if ((hidden = \"mozHidden\") in document)\r\n            document.addEventListener(\"mozvisibilitychange\", onchange);\r\n        else if ((hidden = \"webkitHidden\") in document)\r\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\r\n        else if ((hidden = \"msHidden\") in document)\r\n            document.addEventListener(\"msvisibilitychange\", onchange);\r\n        // IE 9 and lower:\r\n        else if (\"onfocusin\" in document)\r\n            document.onfocusin = document.onfocusout = onchange;\r\n        // All others:\r\n        else\r\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\r\n\r\n        function onchange(evt) {\r\n            var v = \"visible\",\r\n                h = \"hidden\",\r\n                evtMap = {\r\n                    focus: v,\r\n                    focusin: v,\r\n                    pageshow: v,\r\n                    blur: h,\r\n                    focusout: h,\r\n                    pagehide: h\r\n                };\r\n\r\n            evt = evt || window.event;\r\n\r\n            storeSession = storeSessionFn.get();\r\n\r\n            if (this[hidden]) {\r\n                isActive = false;\r\n                storeSession['before_time'] = Date.now();\r\n                storeSession['after_time'] = Date.now();\r\n                storeSession['session_id'] = storeSession.session_id ? storeSession.session_id : sessionId;\r\n\r\n                sessionStorage.setItem('snt_analytics', JSON.stringify(storeSession));\r\n            } else {\r\n                isActive = true;\r\n                storeSession['before_time'] = storeSession['before_time'] ? storeSession['before_time'] : Date.now();\r\n                storeSession['after_time'] = Date.now();\r\n                storeSession['session_id'] = storeSession.session_id ? storeSession.session_id : sessionId;\r\n                sessionStorage.setItem('snt_analytics', JSON.stringify(storeSession));\r\n            }\r\n            if ((storeSession['after_time'] - storeSession['before_time']) >= timeToLive) {\r\n                iglooTries = 0;\r\n                getIgloo(); // RESET ENTIRE TEST\r\n            }\r\n        }\r\n\r\n        // set the initial state (but only if browser supports the Page Visibility API)\r\n        if (document[hidden] !== undefined)\r\n            onchange({\r\n                type: document[hidden] ? \"blur\" : \"focus\"\r\n            });\r\n    }\r\n\r\n    //setup the event listeners if user becomes active trigger start timer\r\n    function set_idle_listeners() {\r\n        window.top.document.addEventListener(\"mousemove\", start_timer, false);\r\n        window.top.document.addEventListener(\"mousedown\", start_timer, false);\r\n        window.top.document.addEventListener(\"keypress\", start_timer, false);\r\n        window.top.document.addEventListener(\"DOMMouseScroll\", start_timer, false);\r\n        window.top.document.addEventListener(\"mousewheel\", start_timer, false);\r\n        window.top.document.addEventListener(\"touchstart\", start_timer, false);\r\n        window.top.document.addEventListener(\"touchmove\", start_timer, false);\r\n        window.top.document.addEventListener(\"MSPointerMove\", start_timer, false);\r\n\r\n        var debugSession = window.top.document.getElementById('sessionTest');\r\n        if (!widgetEngaged || !view) {\r\n            if (sessionTimer) {\r\n                if (!sessionTimer.timerOn) {\r\n                    sessionTimer.startTime();\r\n                }\r\n            } else {\r\n                sessionTimer = new timer('session', 100, timeToLive, debugSession, function (event) {\r\n                    if (event.time >= event.stopAt) {\r\n                        event.pauseTime();\r\n                        event.resetTime();\r\n                        sessionStorage.removeItem('snt_analytics');\r\n                        iglooTries = 0;\r\n                        getIgloo(); // RESET ENTIRE TEST\r\n                    }\r\n                }); //timeToLive in (ms) is 10 minutes\r\n                sessionTimer.startTime();\r\n            }\r\n        } else {\r\n            sessionTimer.pauseTime();\r\n            sessionTimer.resetTime();\r\n        }\r\n    }\r\n\r\n    //if user becomes active, remove event listeners so we dont polute the event space\r\n    function start_timer() {\r\n        window.top.document.removeEventListener(\"mousemove\", start_timer, false);\r\n        window.top.document.removeEventListener(\"mousedown\", start_timer, false);\r\n        window.top.document.removeEventListener(\"keypress\", start_timer, false);\r\n        window.top.document.removeEventListener(\"DOMMouseScroll\", start_timer, false);\r\n        window.top.document.removeEventListener(\"mousewheel\", start_timer, false);\r\n        window.top.document.removeEventListener(\"touchstart\", start_timer, false);\r\n        window.top.document.removeEventListener(\"touchmove\", start_timer, false);\r\n        window.top.document.removeEventListener(\"MSPointerMove\", start_timer, false);\r\n\r\n        isActive = true;\r\n        sessionTimer.pauseTime();\r\n        sessionTimer.resetTime();\r\n\r\n        dwellLimitTimer.resetTime();\r\n        dwellLimitTimer.startTime();\r\n\r\n        if (!widgetEngaged) {\r\n            set_idle_listeners();\r\n        }\r\n    }\r\n\r\n    function analyticsSession() {\r\n        var sessionTest,\r\n            s_id;\r\n        var sstorage = storeSessionFn.get();\r\n        sessionId = sstorage && sstorage.session_id ? sstorage.session_id : randomString(16); //Generate a session ID\r\n        sstorage.session_id = sessionId;\r\n        storeSessionFn.set(sstorage);\r\n\r\n        set_idle_listeners();\r\n    }\r\n\r\n\r\n    function analyticsViewScroll(element) {\r\n        try {\r\n            var viewTest,\r\n                createTimer;\r\n\r\n            var payloadTimer = 3000, // (ms) Initial payload timer 0.5 seconds\r\n                payloadLimit = 5000,\r\n                payloadTempTimer = 0; // (ms) Initial payload limit 10 seconds\r\n\r\n            // if (!window.document.getElementById('viewTest')) {\r\n            //     viewTest = window.document.createElement('div');\r\n            //     viewTest.id = 'viewTest';\r\n            //     viewTest.style = \"position:fixed;top:0;right:0;background:black;color:white;font-size:20px;z-index:100\";\r\n            //     window.document.body.insertBefore(viewTest, window.document.body.firstElementChild);\r\n            // }\r\n\r\n            var debugView = window.document.getElementById('viewTest');\r\n\r\n            var debugTimer = window.document.getElementById('viewDwell');\r\n\r\n            viewDwell = viewDwell ? viewDwell : new timer('view', 500, null, debugTimer, function (event) {\r\n                if (viewEngaged) {\r\n                    question_view = 1;\r\n                    bounce = 1; // trivia engaged the question is now always able to be a bounced question until user clicks next question then metrics will change;\r\n                }\r\n\r\n                if (view) {\r\n                    oneSecMRC += event.tick;\r\n                    if (oneSecMRC >= 1000) { // if oneSecMRC variable every reaches 1 second or more it will set the check to true\r\n                        oneSecMRCcheck = true;\r\n                    }\r\n                } else { // should go straight into dwellLimitTimer if CU no longer in view but if it reaches this then it should reset oneSecMRC variable\r\n                    oneSecMRC = 0;\r\n                }\r\n                if (!widgetEngaged && !dwellLimitTimer.timerOn) {\r\n                    isActive = false;\r\n                }\r\n                if (!widgetEngaged) {\r\n                    set_idle_listeners(); // create Session Timer to listen for any event and determine if the use is idle\r\n                    engageDwell.pauseTime();\r\n                    if (isActive) {\r\n                        sessionTimer.resetTime();\r\n                        sessionTimer.pauseTime();\r\n                        var payT = (isActiveTimer % payloadTimer);\r\n                        if (payT == 0) {\r\n                            if (!view) { // makes sure if widget is not in view to send 0 in for viewdwell.\r\n                                event.time = 0;\r\n                            }\r\n                            if ((payloadTempTimer % payloadTimer) == 0 && payloadTempTimer != 0) {\r\n                                updatePayload('send');\r\n                            }\r\n                            if (payloadTempTimer == 3000 && payloadTimer == 3000) {\r\n                                payloadTimer = 10000;\r\n                                payloadTempTimer = 0;\r\n                                isActiveTimer = 0;\r\n                            }\r\n                        } // payT\r\n                        payloadTempTimer += event.tick;\r\n                        isActiveTimer += event.tick;\r\n                    }\r\n                } // widgetEngaged\r\n            });\r\n\r\n\r\n            window.top.addEventListener(\"scroll\", function () { // create listener on scroll to detect if widget in view\r\n                if (!viewDwell) {\r\n                    viewDwell = new timer('view', 100, null, debugTimer);\r\n                }\r\n                view = iglooAnalytics(element, 'view');\r\n\r\n                if (debugView) {\r\n                    debugView.innerHTML = 'view: ' + view;\r\n                }\r\n\r\n                if (view && widgetEngaged) { //if in view and engaged set and flag that will always run the viewDwell whenever in view\r\n                    viewEngaged = true;\r\n                } else {\r\n                    viewEngaged = !view && !viewEngaged ? false : viewEngaged;\r\n                }\r\n                if (view) { // if trivia is in view & timer isnt on & trivia is engaged => start timer\r\n                    viewDwell.startTime();\r\n                } else {\r\n                    engageDwell.pauseTime();\r\n                    viewDwell.pauseTime();\r\n                    set_idle_listeners(); // create Session Timer to listen for any event and determin if the use is idle\r\n                }\r\n            });\r\n\r\n            // to be able to initially run the scroll event listener;\r\n            window.top.scrollTo(window.top.scrollX, window.top.scrollY - 1);\r\n            window.top.scrollTo(window.top.scrollX, window.top.scrollY + 1);\r\n        } catch (e) {\r\n            console.warn('ViewScroll Error', e);\r\n        }\r\n    }\r\n\r\n\r\n    function analyticsDwellEngagement() {\r\n        try {\r\n            var dwellTest,\r\n                createTimer,\r\n                dwellLimit;\r\n\r\n            widgetEngaged = false; // by running this make sure to set all values to its default\r\n\r\n            // if (!window.document.getElementById('dwellTest')) {\r\n            //     dwellTest = window.document.createElement('div');\r\n            //     dwellTest.id = 'dwellTest';\r\n            //     dwellTest.style = \"position:fixed;top:0;left:0;background:black;color:white;font-size:20px;z-index:100\";\r\n            //     window.document.body.insertBefore(dwellTest, window.document.body.firstElementChild);\r\n            // }\r\n            var debugDwell = window.document.getElementById('dwellTest');\r\n\r\n            var dwellTime = window.document.getElementById('engageDwell');\r\n\r\n            var debugLimit = window.document.getElementById('dwellLimit');\r\n\r\n            engageDwell = new timer('dwell', 100, null, dwellTime);\r\n            dwellLimitTimer = new timer('dwellLimit', 1000, 10000, debugLimit, function (event) {\r\n                if ((event.time >= event.stopAt) && engageDwell) {\r\n                    isActive = false;\r\n\r\n                    if (engageDwell.timerOn) {\r\n                        engageDwell.time = (engageDwell.time - event.stopAt) < 0 ? 0 : engageDwell.time - event.stopAt;\r\n                    }\r\n                    engageDwell.pauseTime();\r\n                    sessionTimer.resetTime();\r\n                    if (!widgetEngaged) { // if the widget engage is false then make sure to reset the viewDwell timer since javascript could cause delay in sending payload\r\n                        viewDwell.resetTime();\r\n                    }\r\n\r\n                    updatePayload('send');\r\n                    if (!view) {\r\n                        oneSecMRC = 0;\r\n                        viewDwell.pauseTime();\r\n                    }\r\n                    widgetEngaged = false;\r\n\r\n                }\r\n                if (!view) { // viewDwell Timer stops and dwellLimitTimer starts when CU no longer in view so to make sure we reset the variable here\r\n                    oneSecMRC = 0;\r\n                }\r\n            }); //create new timer with limit of 10 seconds\r\n\r\n            // debugDwell.innerHTML = 'dwell: ' + widgetEngaged; //initial debug\r\n            contentAnalyzed.onmouseover = function () { // create listener if widget becomes engaged\r\n                question_view = 1; // set current question view to 1;\r\n                bounce = 1; // trivia engaged the question is now always able to be a bounced question until user clicks next question then metrics will change;\r\n                dwellLimitTimer.resetTime();\r\n                if (!widgetEngaged) {\r\n                    widgetEngaged = true;\r\n                    viewEngaged = true;\r\n\r\n                    engageDwell.startTime();\r\n                    dwellLimitTimer.startTime();\r\n\r\n                    if (!viewDwell.timerOn) {\r\n                        viewDwell.startTime();\r\n                    }\r\n\r\n                    updatePayload('send');\r\n\r\n                } else {\r\n                    dwellLimitTimer.resetTime();\r\n                }\r\n            }\r\n\r\n        } catch (e) {\r\n            console.warn('DwellEngagement Error', e);\r\n        }\r\n    }\r\n\r\n\r\n    function resetAnalytics() {\r\n        if (viewDwell) {\r\n            viewDwell.pauseTime();\r\n            viewDwell.resetTime();\r\n            viewDwell.startTime();\r\n        }\r\n        if (engageDwell) {\r\n            engageDwell.resetTime();\r\n        }\r\n        total_clicks = 0;\r\n        bounce = 0;\r\n        skipped = 0;\r\n    }\r\n\r\n    /*\r\n     ****************************************************************************************************************************************\r\n     ****************ANALYTICS VARIABLES END*************************************************************************************************\r\n     ****************************************************************************************************************************************\r\n     */\r\n\r\n\r\n    /*\r\n     ****************************************************************************************************************************************\r\n     ****************GLOBAL FUNCTIONS *******************************************************************************************************\r\n     ****************************************************************************************************************************************\r\n     */\r\n\r\n\r\n    /**\r\n     * RANDOM STRING GENERATOR\r\n     *\r\n     * Info:      http://stackoverflow.com/a/27872144/383904\r\n     * Use:       randomString(length [,\"A\"] [,\"N\"] );\r\n     * Default:   return a random alpha-numeric string\r\n     * Arguments: If you use the optional \"A\", \"N\" flags:\r\n     *            \"A\" (Alpha flag)   return random a-Z string\r\n     *            \"N\" (Numeric flag) return random 0-9 string\r\n     */\r\n    function randomString(len, an) {\r\n        an = an && an.toLowerCase();\r\n        var str = \"\",\r\n            i = 0,\r\n            min = an == \"a\" ? 10 : 0,\r\n            max = an == \"n\" ? 10 : 62;\r\n        for (; i++ < len;) {\r\n            var r = Math.random() * (max - min) + min << 0;\r\n            str += String.fromCharCode(r += r > 9 ? r < 36 ? 55 : 61 : 48);\r\n        }\r\n        return str;\r\n    }\r\n\r\n    function getDomain(url) {\r\n        var hostName = getHostName(url);\r\n        var domain = hostName;\r\n        if (hostName != null) {\r\n            var parts = hostName.split('.').reverse();\r\n            if (parts != null && parts.length > 1) {\r\n                domain = parts[1] + '.' + parts[0];\r\n                if (hostName.toLowerCase().indexOf('.co.uk') != -1 && parts.length > 2) {\r\n                    domain = parts[2] + '.' + domain;\r\n                }\r\n            }\r\n        }\r\n        return domain;\r\n    }\r\n\r\n    function getHostName(url) {\r\n        var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\r\n            return match[2];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getEnv(env) {\r\n        if (env.match(/^homestead/) != null || env.match(/^localhost/) != null || env.match(/^dev/) != null) {\r\n            env = \"dev-\";\r\n        } else if (env.match(/^qa/) != null) {\r\n            env = \"qa-\";\r\n        } else {\r\n            env = \"prod-\";\r\n        }\r\n        return env;\r\n    }\r\n\r\n    /**\r\n     * Send a post message to every window up to the top window\r\n     * @param  {Object}  postObject The object to send as a postMessage\r\n     * @param  {Integer} maxLoops   The maximum number of layers to traverse up\r\n     */\r\n    function sendPostMessageToIgloo(postObject, maxLoops) {\r\n        // Initialize variables\r\n        var postWindows = [window];\r\n        var currentWindow = window;\r\n        var currentLoop = 0;\r\n        maxLoops = typeof maxLoops === 'undefined' ? 10 : maxLoops;\r\n\r\n        // Build all of the windows to send the message to\r\n        try {\r\n            // Loop through all of the windows\r\n            while (currentLoop++ < maxLoops && currentWindow !== window.top) {\r\n                // Move up a layer\r\n                currentWindow = currentWindow.parent;\r\n\r\n                // Add to the postMessage array\r\n                postWindows.push(currentWindow);\r\n\r\n            }\r\n        } catch (e) {}\r\n        // Send the post messages\r\n        for (var i = 0; i < postWindows.length; i++) {\r\n            postWindows[i].postMessage(postObject, '*');\r\n        }\r\n    }\r\n\r\n    //STYLES used in console\r\n    var analyticsStyles = [\r\n        'background: linear-gradient(#2a9a13, #000000)', 'border: 1px solid #3E0E02', 'color: white', 'text-shadow: 0 1px 0 rgba(0, 0, 0, 0.3)', 'text-align: center', 'font-weight: bold'\r\n    ].join(';');\r\n    var payloadStyles = [\r\n        'background: linear-gradient(#4e028a, #000000)', 'border: 1px solid #3E0E02', 'color: white', 'text-shadow: 0 1px 0 rgba(0, 0, 0, 0.3)', 'text-align: center', 'font-weight: bold'\r\n    ].join(';');\r\n    var defaultStyle = [\r\n        'background: linear-gradient(#000000, #6e6e6e)', 'border: 1px solid #3E0E02', 'color: #1fc134', 'text-shadow: 0 1px 0 rgba(0, 0, 0, 0.3)', 'text-align: center', 'font-weight: bold'\r\n    ].join(';');\r\n\r\n    //style log to use for coloring develop tool console\r\n    function log(msg, style) {\r\n        // if (debug) {\r\n        if (!style) {\r\n            style = defaultStyle;\r\n        }\r\n        console.log('%c' + msg + '', style);\r\n        // }\r\n    };\r\n    /*\r\n     ****************************************************************************************************************************************\r\n     ****************GLOBAL FUNCTIONS END*************************************************************************************************\r\n     ****************************************************************************************************************************************\r\n     */\r\n\r\n\r\n    //#0 START WIDGET\r\n    getIgloo();\r\n\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 0\n// module chunks = 0","module.exports = \"<!DOCTYPE html>\\r\\n<html lang=en>\\r\\n\\r\\n<head>\\r\\n  <title>Slider</title>\\r\\n  <meta charset=utf-8>\\r\\n  <base target=_blank>\\r\\n  <meta name=viewport content=\\\"width=device-width,initial-scale=1\\\">\\r\\n</head>\\r\\n\\r\\n<body>\\r\\n</body>\\r\\n\\r\\n</html>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./html/index.html\n// module id = 1\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"@font-face {\\r\\n    font-family: 'Lato';\\r\\n    font-style: normal;\\r\\n    font-weight: 400;\\r\\n    src: local('Lato Regular'), local('Lato-Regular'), url(http://fonts.gstatic.com/s/lato/v13/8qcEw_nrk_5HEcCpYdJu8BTbgVql8nDJpwnrE27mub0.woff2) format('woff2');\\r\\n    unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;\\r\\n}\\r\\n\\r\\n/* latin */\\r\\n@font-face {\\r\\n    font-family: 'Lato';\\r\\n    font-style: normal;\\r\\n    font-weight: 400;\\r\\n    src: local('Lato Regular'), local('Lato-Regular'), url(http://fonts.gstatic.com/s/lato/v13/MDadn8DQ_3oT6kvnUq_2r_esZW2xOQ-xsNqO47m55DA.woff2) format('woff2');\\r\\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\\r\\n}\\r\\n\\r\\n/* latin-ext */\\r\\n@font-face {\\r\\n    font-family: 'Lato';\\r\\n    font-style: normal;\\r\\n    font-weight: 700;\\r\\n    src: local('Lato Bold'), local('Lato-Bold'), url(http://fonts.gstatic.com/s/lato/v13/rZPI2gHXi8zxUjnybc2ZQFKPGs1ZzpMvnHX-7fPOuAc.woff2) format('woff2');\\r\\n    unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;\\r\\n}\\r\\n\\r\\n/* latin */\\r\\n@font-face {\\r\\n    font-family: 'Lato';\\r\\n    font-style: normal;\\r\\n    font-weight: 700;\\r\\n    src: local('Lato Bold'), local('Lato-Bold'), url(http://fonts.gstatic.com/s/lato/v13/MgNNr5y1C_tIEuLEmicLmwLUuEpTyoUstqEm5AMlJo4.woff2) format('woff2');\\r\\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    font-family: lato, helvetica;\\r\\n    border: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    -webkit-overflow-scrolling: touch;\\r\\n    -webkit-user-select: none;\\r\\n    -khtml-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    -o-user-select: none;\\r\\n    user-select: none;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    -webkit-user-select: none;\\r\\n    -khtml-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    -o-user-select: none;\\r\\n    user-select: none;\\r\\n    -webkit-user-drag: none;\\r\\n    -khtml-user-drag: none;\\r\\n    -moz-user-drag: none;\\r\\n    -o-user-drag: none;\\r\\n    user-drag: none;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n    background-position: 50%;\\r\\n    background-repeat: no-repeat;\\r\\n    height: 39px;\\r\\n    width: 26px;\\r\\n}\\r\\n\\r\\n.wrapper {\\r\\n    position: absolute;\\r\\n    overflow: hidden;\\r\\n    width: 100%;\\r\\n    height: 250px;\\r\\n    background-color: #f7f7f7;\\r\\n    border: 1px solid #e1e1e1;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.edge_shader {\\r\\n    position: absolute;\\r\\n    right: -5px;\\r\\n    top: 0;\\r\\n    width: 3px;\\r\\n    height: 100%;\\r\\n    box-shadow: -5px 0 10px rgba(0, 0, 0, 0.8);\\r\\n    z-index: 999;\\r\\n    transition: opacity 0.2s ease-in-out;\\r\\n}\\r\\n\\r\\n.title_overlay {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n\\r\\n.title_image_div {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    overflow: hidden;\\r\\n    position: absolute;\\r\\n    border-radius: 2px;\\r\\n    background-size: 1000% 1000%;\\r\\n    image-rendering: optimizeSpeed; /*                     */\\r\\n    image-rendering: -moz-crisp-edges; /* Firefox             */\\r\\n    image-rendering: -o-crisp-edges; /* Opera               */\\r\\n    image-rendering: -webkit-optimize-contrast; /* Chrome (and Safari) */\\r\\n    image-rendering: optimize-contrast; /* CSS3 Proposed       */\\r\\n    -ms-interpolation-mode: nearest-neighbor; /* IE8+                */\\r\\n    /*border-bottom: 1px solid rgba(50,50,50,0.1);*/\\r\\n}\\r\\n\\r\\n.title_image_div.overlay::before {\\r\\n    content: \\\"\\\";\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    position: absolute;\\r\\n    opacity: 0.9;\\r\\n    background-color: inherit;\\r\\n}\\r\\n\\r\\n.title_image {\\r\\n    width: auto;\\r\\n    height: 100%;\\r\\n    background-size: contain;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    left: 0;\\r\\n    width: 200px;\\r\\n    height: auto;\\r\\n    white-space: normal;\\r\\n    padding: 15px 15px;\\r\\n    font-weight: 900;\\r\\n    color: #fff;\\r\\n    font-size: 20px;\\r\\n    transition: opacity 0.2s ease-in-out;\\r\\n    z-index: 9;\\r\\n}\\r\\n\\r\\n.instructions_container {\\r\\n    position: absolute;\\r\\n    font-size: 14px;\\r\\n    font-weight: bold;\\r\\n    font-style: italic;\\r\\n    line-height: 1.14;\\r\\n    text-align: left;\\r\\n    color: #fff;\\r\\n    left: 30px;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.instructions_icon {\\r\\n    position: relative;\\r\\n    width: 25px;\\r\\n    height: 31px;\\r\\n}\\r\\n\\r\\n.instructions_text {\\r\\n    width: 150px;\\r\\n    opacity: 0.7;\\r\\n    position: relative;\\r\\n    left: 34px;\\r\\n    top: -26px;\\r\\n    white-space: normal;\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\\r\\n.pointer {\\r\\n    pointer-events: none;\\r\\n    position: absolute;\\r\\n    box-sizing: border-box;\\r\\n    width: 56px;\\r\\n    right: 0;\\r\\n    top: 50%;\\r\\n    transform: translateY(-50%);\\r\\n    padding: 10.5px 5px 10.5px 10px;\\r\\n    /*font-weight: 300;*/\\r\\n    font-size: 20px;\\r\\n    color: white;\\r\\n    fill: white;\\r\\n    border-top-left-radius: 15px;\\r\\n    border-bottom-left-radius: 15px;\\r\\n    overflow: hidden;\\r\\n    -webkit-backdrop-filter: blur(3px);\\r\\n    backdrop-filter: blur(3px);\\r\\n    background-color: rgba(0, 0, 0, 0.8);\\r\\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.26), 0 0 0 1px rgba(0, 0, 0, 0.09);\\r\\n    opacity: 1;\\r\\n    transition: opacity 0.2s ease-in-out;\\r\\n    z-index: 100;\\r\\n}\\r\\n\\r\\n.pointer .icon {\\r\\n    animation: swipe .75s infinite;\\r\\n}\\r\\n\\r\\n@keyframes swipe {\\r\\n    0% {\\r\\n        -webkit-transform: translateX(12px);\\r\\n        -moz-transform: translateX(12px);\\r\\n        -ms-transform: translateX(12px);\\r\\n        -o-transform: translateX(12px);\\r\\n        transform: translateX(12px);\\r\\n        opacity: 1;\\r\\n    }\\r\\n    50% {\\r\\n        -webkit-transform: translateX(0);\\r\\n        -moz-transform: translateX(0);\\r\\n        -ms-transform: translateX(0);\\r\\n        -o-transform: translateX(0);\\r\\n        transform: translateX(0);\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        -webkit-transform: translateX(12px);\\r\\n        -moz-transform: translateX(12px);\\r\\n        -ms-transform: translateX(12px);\\r\\n        -o-transform: translateX(12px);\\r\\n        transform: translateX(12px);\\r\\n        opacity: 1;\\r\\n    }\\r\\n}\\r\\n\\r\\n.slider {\\r\\n    position: relative;\\r\\n    right: 0;\\r\\n    width: 100%;\\r\\n    height: 250px;\\r\\n    white-space: nowrap;\\r\\n    background-color: #f7f7f7;\\r\\n    -ms-overflow-style: none;\\r\\n    z-index: 15;\\r\\n    transition: all 0.6s ease-in-out;\\r\\n}\\r\\n\\r\\n.slider.stopAnim {\\r\\n    -webkit-animation: .5s;\\r\\n    animation: .5s;\\r\\n}\\r\\n\\r\\n.list_wrapper{\\r\\n    height:100%;\\r\\n    display:inline-block;\\r\\n}\\r\\n\\r\\n.slider_block {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    height: 230px;\\r\\n    width: 230px;\\r\\n    margin: 9px 8px;\\r\\n}\\r\\n\\r\\n.list_item {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    background-color: white;\\r\\n    border-radius: 3px;\\r\\n    border: 1px solid #e1e1e1;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.ad_spacer {\\r\\n    width: 296px;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.ad_item {\\r\\n    position: absolute;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    z-index: 99;\\r\\n}\\r\\n\\r\\n.profile_image_div {\\r\\n    width: 100%;\\r\\n    height: 150px;\\r\\n    display: block;\\r\\n    overflow: hidden;\\r\\n    position: absolute;\\r\\n    border-top-left-radius: 2px;\\r\\n    border-top-right-radius: 2px;\\r\\n    background-size: 1000% 1000%;\\r\\n    image-rendering: optimizeSpeed; /*                     */\\r\\n    image-rendering: -moz-crisp-edges; /* Firefox             */\\r\\n    image-rendering: -o-crisp-edges; /* Opera               */\\r\\n    image-rendering: -webkit-optimize-contrast; /* Chrome (and Safari) */\\r\\n    image-rendering: optimize-contrast; /* CSS3 Proposed       */\\r\\n    -ms-interpolation-mode: nearest-neighbor; /* IE8+                */\\r\\n    /*border-bottom: 1px solid rgba(50,50,50,0.1);*/\\r\\n}\\r\\n\\r\\n.profile_image_div.fallback::before {\\r\\n    content: \\\"\\\";\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    position: absolute;\\r\\n    z-index: 99;\\r\\n    opacity: 0.6;\\r\\n    background-color: inherit;\\r\\n}\\r\\n\\r\\n.profile_image {\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 50%;\\r\\n    transform: translateY(-50%);\\r\\n}\\r\\n\\r\\n.num {\\r\\n    position: absolute;\\r\\n    right: -5px;\\r\\n    top: -20px;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-top: 30px solid transparent;\\r\\n    border-bottom: 30px solid transparent;\\r\\n    border-left: 30px solid black;\\r\\n    transform: rotate(-45deg);\\r\\n    z-index: 100;\\r\\n}\\r\\n\\r\\n.num_text {\\r\\n    font-size: 10px;\\r\\n    color: white;\\r\\n    width: 20px;\\r\\n    top: -9px;\\r\\n    right: 8px;\\r\\n    text-align: center;\\r\\n    font-weight: 300;\\r\\n    position: absolute;\\r\\n    transform: rotate(45deg);\\r\\n}\\r\\n\\r\\n.num_text b {\\r\\n    position: relative;\\r\\n    top: 2px;\\r\\n    font-size: 12px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.info {\\r\\n    width: 100%;\\r\\n    height: 80px;\\r\\n    position: absolute;\\r\\n    top: 150px;\\r\\n    display: table;\\r\\n}\\r\\n\\r\\n.info .info_container {\\r\\n    display: table-cell;\\r\\n    vertical-align: middle;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.name {\\r\\n    font-size: 14px;\\r\\n    width: 215px;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    padding: 0 5px;\\r\\n}\\r\\n\\r\\n.symbl, .location {\\r\\n    font-size: 12px;\\r\\n    color: #bebebe;\\r\\n    max-width: 95%;\\r\\n    padding: 0 5px;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.location {\\r\\n    margin-bottom: 5px;\\r\\n    max-width: 95%;\\r\\n    padding: 0 5px;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.bold{\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.value {\\r\\n    width: 215px;\\r\\n    font-size: 20px;\\r\\n    color: #272727;\\r\\n    margin-top: 3px;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    padding: 0 5px;\\r\\n}\\r\\n\\r\\n.stat_type {\\r\\n    width: 215px;\\r\\n    font-size: 12px;\\r\\n    color: #666666;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    padding: 0 5px;\\r\\n}\\r\\n\\r\\n.next_list {\\r\\n    font-size: 12px;\\r\\n    position: relative;\\r\\n    top: -96px;\\r\\n    width: 56px;\\r\\n    margin: 0 5px 0 0;\\r\\n    padding: 80px 10px 88px 10px;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.next_arrow {\\r\\n    font-size: 30px;\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.slider_ad_zone {\\r\\n    width: 100%;\\r\\n    height: 250px;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    background-color: rgba(0, 0, 0, 0.9);\\r\\n    z-index: 15;\\r\\n    display: none;\\r\\n    -webkit-animation-fill-mode: both;\\r\\n    -moz-animation-fill-mode: both;\\r\\n    -ms-animation-fill-mode: both;\\r\\n    -o-animation-fill-mode: both;\\r\\n    animation-fill-mode: both;\\r\\n    -webkit-animation-duration: 3.2s;\\r\\n    -moz-animation-duration: 3.2s;\\r\\n    -ms-animation-duration: 3.2s;\\r\\n    -o-animation-duration: 3.2s;\\r\\n    animation-duration: 3.2s;\\r\\n}\\r\\n\\r\\n.slider_background {\\r\\n    position: relative;\\r\\n    width: 300px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n.ad_progress_fill {\\r\\n    width: 100%;\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    z-index: 100;\\r\\n    height: 3px;\\r\\n    background: #000;\\r\\n    opacity: .1;\\r\\n}\\r\\n\\r\\n.ad_progress_bar {\\r\\n    position: absolute;\\r\\n    bottom: 2px;\\r\\n    z-index: 100;\\r\\n    height: 3px;\\r\\n    background: #3098ff;\\r\\n    background: -webkit-linear-gradient(left, #3098ff 0%, #3098ff 0%, #34d4ff 100%); /* Chrome10-25,Safari5.1-6 */\\r\\n    background: linear-gradient(to right, #3098ff 0%, #3098ff 0%, #34d4ff 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fade {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    10% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    90% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@-moz-keyframes fade {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    10% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    90% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@-o-keyframes fade {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    10% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    90% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@keyframes fade {\\r\\n    0% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n    10% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    90% {\\r\\n        opacity: 1;\\r\\n    }\\r\\n    100% {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.fade_in_out {\\r\\n    -webkit-animation-name: fade;\\r\\n    -moz-animation-name: fade;\\r\\n    -o-animation-name: fade;\\r\\n    animation-name: fade;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./css/slider.css\n// module id = 2\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}